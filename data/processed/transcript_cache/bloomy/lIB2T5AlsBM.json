{
  "video_id": "lIB2T5AlsBM",
  "video_url": "https://www.youtube.com/watch?v=lIB2T5AlsBM",
  "video_info": {
    "title": "How to use AVERAGEIF function in Excel",
    "uploader": "ExplainHowToSimply",
    "channel": "ExplainHowToSimply",
    "duration": 122,
    "upload_date": "20211109",
    "view_count": 52,
    "description": "This video shows a simple example of the AVERAGEIF function in Excel. The averageif function is used to calculate the mean/average of numbers with an additional condition. It is very useful to exclude specific values or also get rid of outliers. With it you have many options, to specify the average based on conditions which are very convenient to use. This is shown in simple short examples.",
    "tags": [
      "Excel",
      "Excel sheet",
      "Excel formula",
      "Microsoft Excel",
      "Excel table",
      "Excel tutorial",
      "tutorial about Excel",
      "How to work with Excel",
      "Excel basics",
      "Microsoft Excel Ex.",
      "Excel explain video",
      "Excel formula syntax",
      "basic Excel tutorial",
      "how to do Excel",
      "how to deal with Excel",
      "average",
      "averageif",
      "averageif function",
      "AVERAGEIF function",
      "Excel AVERAGEIF",
      "Excel averageif",
      "average with special condition",
      "average positive numbers",
      "only average numbers bigger than threshold",
      "average based on"
    ]
  },
  "personality": "bloomy",
  "domain": "finance_excel",
  "expertise_areas": [
    "bloomberg",
    "excel",
    "finance",
    "data analysis",
    "trading",
    "financial modeling"
  ],
  "language": "en",
  "text": " Hello everyone, in this short tutorial I explain how to simply use the average if function in Excel to calculate a simple mean, the mean of the numbers which are bigger than zero, the mean without the number zero, or only considering the numbers to a certain upper boundary. So, for example, here we have 14 also in the sample, which might be an outlier we don't want to consider, so we have this upper boundary of 10. For the mean, we just use the average function and we define the range from C1 to C15. Then for the mean of the numbers which are bigger than zero, we can use the function average if we specify the range where we want to look for the criteria and we specify the criteria within the quotation mark, we want it to be bigger than zero, and then we need to define the range of the numbers where we want to take the average, so we take the same range. And when we want to get the mean without zero, then we just need to specify the criteria as smaller, bigger zero within quotation marks, and this will give us the mean of 3.16. And when we want to get the mean with this upper boundary of 10, so we don't include this 14 within these numbers, then we can just use the average if function with the same range here and the condition to be smaller in quotation marks with an AND connected and then E19, which is this cell here. And as you can see, this mean or average dropped massively just because we don't include this 14. So if this video helped, please leave a like, that means a lot to me. You can also subscribe for more useful content on Excel. Thanks a lot and have a nice day.",
  "segments": [
    {
      "id": 0,
      "seek": 0,
      "start": 0.0,
      "end": 9.76,
      "text": " Hello everyone, in this short tutorial I explain how to simply use the average if function",
      "tokens": [
        50364,
        2425,
        1518,
        11,
        294,
        341,
        2099,
        7073,
        286,
        2903,
        577,
        281,
        2935,
        764,
        264,
        4274,
        498,
        2445,
        50852
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1828488339199109,
      "compression_ratio": 1.6088888888888888,
      "no_speech_prob": 0.028910407796502113
    },
    {
      "id": 1,
      "seek": 0,
      "start": 9.76,
      "end": 16.36,
      "text": " in Excel to calculate a simple mean, the mean of the numbers which are bigger than zero,",
      "tokens": [
        50852,
        294,
        19060,
        281,
        8873,
        257,
        2199,
        914,
        11,
        264,
        914,
        295,
        264,
        3547,
        597,
        366,
        3801,
        813,
        4018,
        11,
        51182
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1828488339199109,
      "compression_ratio": 1.6088888888888888,
      "no_speech_prob": 0.028910407796502113
    },
    {
      "id": 2,
      "seek": 0,
      "start": 16.36,
      "end": 22.080000000000002,
      "text": " the mean without the number zero, or only considering the numbers to a certain upper",
      "tokens": [
        51182,
        264,
        914,
        1553,
        264,
        1230,
        4018,
        11,
        420,
        787,
        8079,
        264,
        3547,
        281,
        257,
        1629,
        6597,
        51468
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1828488339199109,
      "compression_ratio": 1.6088888888888888,
      "no_speech_prob": 0.028910407796502113
    },
    {
      "id": 3,
      "seek": 0,
      "start": 22.080000000000002,
      "end": 23.080000000000002,
      "text": " boundary.",
      "tokens": [
        51468,
        12866,
        13,
        51518
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1828488339199109,
      "compression_ratio": 1.6088888888888888,
      "no_speech_prob": 0.028910407796502113
    },
    {
      "id": 4,
      "seek": 0,
      "start": 23.080000000000002,
      "end": 29.12,
      "text": " So, for example, here we have 14 also in the sample, which might be an outlier we don't",
      "tokens": [
        51518,
        407,
        11,
        337,
        1365,
        11,
        510,
        321,
        362,
        3499,
        611,
        294,
        264,
        6889,
        11,
        597,
        1062,
        312,
        364,
        484,
        2753,
        321,
        500,
        380,
        51820
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1828488339199109,
      "compression_ratio": 1.6088888888888888,
      "no_speech_prob": 0.028910407796502113
    },
    {
      "id": 5,
      "seek": 2912,
      "start": 29.12,
      "end": 33.480000000000004,
      "text": " want to consider, so we have this upper boundary of 10.",
      "tokens": [
        50364,
        528,
        281,
        1949,
        11,
        370,
        321,
        362,
        341,
        6597,
        12866,
        295,
        1266,
        13,
        50582
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12252917944216261,
      "compression_ratio": 1.8,
      "no_speech_prob": 0.012909379787743092
    },
    {
      "id": 6,
      "seek": 2912,
      "start": 33.480000000000004,
      "end": 40.72,
      "text": " For the mean, we just use the average function and we define the range from C1 to C15.",
      "tokens": [
        50582,
        1171,
        264,
        914,
        11,
        321,
        445,
        764,
        264,
        4274,
        2445,
        293,
        321,
        6964,
        264,
        3613,
        490,
        383,
        16,
        281,
        383,
        5211,
        13,
        50944
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12252917944216261,
      "compression_ratio": 1.8,
      "no_speech_prob": 0.012909379787743092
    },
    {
      "id": 7,
      "seek": 2912,
      "start": 40.72,
      "end": 46.52,
      "text": " Then for the mean of the numbers which are bigger than zero, we can use the function",
      "tokens": [
        50944,
        1396,
        337,
        264,
        914,
        295,
        264,
        3547,
        597,
        366,
        3801,
        813,
        4018,
        11,
        321,
        393,
        764,
        264,
        2445,
        51234
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12252917944216261,
      "compression_ratio": 1.8,
      "no_speech_prob": 0.012909379787743092
    },
    {
      "id": 8,
      "seek": 2912,
      "start": 46.52,
      "end": 53.68000000000001,
      "text": " average if we specify the range where we want to look for the criteria and we specify the",
      "tokens": [
        51234,
        4274,
        498,
        321,
        16500,
        264,
        3613,
        689,
        321,
        528,
        281,
        574,
        337,
        264,
        11101,
        293,
        321,
        16500,
        264,
        51592
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12252917944216261,
      "compression_ratio": 1.8,
      "no_speech_prob": 0.012909379787743092
    },
    {
      "id": 9,
      "seek": 2912,
      "start": 53.68000000000001,
      "end": 58.6,
      "text": " criteria within the quotation mark, we want it to be bigger than zero, and then we need",
      "tokens": [
        51592,
        11101,
        1951,
        264,
        47312,
        1491,
        11,
        321,
        528,
        309,
        281,
        312,
        3801,
        813,
        4018,
        11,
        293,
        550,
        321,
        643,
        51838
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12252917944216261,
      "compression_ratio": 1.8,
      "no_speech_prob": 0.012909379787743092
    },
    {
      "id": 10,
      "seek": 5860,
      "start": 58.64,
      "end": 64.32000000000001,
      "text": " to define the range of the numbers where we want to take the average, so we take the",
      "tokens": [
        50366,
        281,
        6964,
        264,
        3613,
        295,
        264,
        3547,
        689,
        321,
        528,
        281,
        747,
        264,
        4274,
        11,
        370,
        321,
        747,
        264,
        50650
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1276249276830795,
      "compression_ratio": 1.7463414634146341,
      "no_speech_prob": 0.009205951355397701
    },
    {
      "id": 11,
      "seek": 5860,
      "start": 64.32000000000001,
      "end": 65.96000000000001,
      "text": " same range.",
      "tokens": [
        50650,
        912,
        3613,
        13,
        50732
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1276249276830795,
      "compression_ratio": 1.7463414634146341,
      "no_speech_prob": 0.009205951355397701
    },
    {
      "id": 12,
      "seek": 5860,
      "start": 65.96000000000001,
      "end": 71.28,
      "text": " And when we want to get the mean without zero, then we just need to specify the criteria",
      "tokens": [
        50732,
        400,
        562,
        321,
        528,
        281,
        483,
        264,
        914,
        1553,
        4018,
        11,
        550,
        321,
        445,
        643,
        281,
        16500,
        264,
        11101,
        50998
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1276249276830795,
      "compression_ratio": 1.7463414634146341,
      "no_speech_prob": 0.009205951355397701
    },
    {
      "id": 13,
      "seek": 5860,
      "start": 71.28,
      "end": 79.96000000000001,
      "text": " as smaller, bigger zero within quotation marks, and this will give us the mean of 3.16.",
      "tokens": [
        50998,
        382,
        4356,
        11,
        3801,
        4018,
        1951,
        47312,
        10640,
        11,
        293,
        341,
        486,
        976,
        505,
        264,
        914,
        295,
        805,
        13,
        6866,
        13,
        51432
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1276249276830795,
      "compression_ratio": 1.7463414634146341,
      "no_speech_prob": 0.009205951355397701
    },
    {
      "id": 14,
      "seek": 5860,
      "start": 79.96000000000001,
      "end": 85.0,
      "text": " And when we want to get the mean with this upper boundary of 10, so we don't include",
      "tokens": [
        51432,
        400,
        562,
        321,
        528,
        281,
        483,
        264,
        914,
        365,
        341,
        6597,
        12866,
        295,
        1266,
        11,
        370,
        321,
        500,
        380,
        4090,
        51684
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1276249276830795,
      "compression_ratio": 1.7463414634146341,
      "no_speech_prob": 0.009205951355397701
    },
    {
      "id": 15,
      "seek": 8500,
      "start": 85.04,
      "end": 91.32,
      "text": " this 14 within these numbers, then we can just use the average if function with the",
      "tokens": [
        50366,
        341,
        3499,
        1951,
        613,
        3547,
        11,
        550,
        321,
        393,
        445,
        764,
        264,
        4274,
        498,
        2445,
        365,
        264,
        50680
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1511075279929421,
      "compression_ratio": 1.537313432835821,
      "no_speech_prob": 0.09164629876613617
    },
    {
      "id": 16,
      "seek": 8500,
      "start": 91.32,
      "end": 100.04,
      "text": " same range here and the condition to be smaller in quotation marks with an AND connected and",
      "tokens": [
        50680,
        912,
        3613,
        510,
        293,
        264,
        4188,
        281,
        312,
        4356,
        294,
        47312,
        10640,
        365,
        364,
        8093,
        4582,
        293,
        51116
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1511075279929421,
      "compression_ratio": 1.537313432835821,
      "no_speech_prob": 0.09164629876613617
    },
    {
      "id": 17,
      "seek": 8500,
      "start": 100.04,
      "end": 103.48,
      "text": " then E19, which is this cell here.",
      "tokens": [
        51116,
        550,
        462,
        3405,
        11,
        597,
        307,
        341,
        2815,
        510,
        13,
        51288
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1511075279929421,
      "compression_ratio": 1.537313432835821,
      "no_speech_prob": 0.09164629876613617
    },
    {
      "id": 18,
      "seek": 8500,
      "start": 103.48,
      "end": 109.88,
      "text": " And as you can see, this mean or average dropped massively just because we don't include this",
      "tokens": [
        51288,
        400,
        382,
        291,
        393,
        536,
        11,
        341,
        914,
        420,
        4274,
        8119,
        29379,
        445,
        570,
        321,
        500,
        380,
        4090,
        341,
        51608
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1511075279929421,
      "compression_ratio": 1.537313432835821,
      "no_speech_prob": 0.09164629876613617
    },
    {
      "id": 19,
      "seek": 8500,
      "start": 109.88,
      "end": 110.88,
      "text": " 14.",
      "tokens": [
        51608,
        3499,
        13,
        51658
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1511075279929421,
      "compression_ratio": 1.537313432835821,
      "no_speech_prob": 0.09164629876613617
    },
    {
      "id": 20,
      "seek": 11088,
      "start": 110.88,
      "end": 114.92,
      "text": " So if this video helped, please leave a like, that means a lot to me.",
      "tokens": [
        50364,
        407,
        498,
        341,
        960,
        4254,
        11,
        1767,
        1856,
        257,
        411,
        11,
        300,
        1355,
        257,
        688,
        281,
        385,
        13,
        50566
      ],
      "temperature": 0.0,
      "avg_logprob": -0.21298228369818795,
      "compression_ratio": 1.28,
      "no_speech_prob": 0.46974462270736694
    },
    {
      "id": 21,
      "seek": 11088,
      "start": 114.92,
      "end": 118.83999999999999,
      "text": " You can also subscribe for more useful content on Excel.",
      "tokens": [
        50566,
        509,
        393,
        611,
        3022,
        337,
        544,
        4420,
        2701,
        322,
        19060,
        13,
        50762
      ],
      "temperature": 0.0,
      "avg_logprob": -0.21298228369818795,
      "compression_ratio": 1.28,
      "no_speech_prob": 0.46974462270736694
    },
    {
      "id": 22,
      "seek": 11088,
      "start": 118.83999999999999,
      "end": 120.8,
      "text": " Thanks a lot and have a nice day.",
      "tokens": [
        50762,
        2561,
        257,
        688,
        293,
        362,
        257,
        1481,
        786,
        13,
        50860
      ],
      "temperature": 0.0,
      "avg_logprob": -0.21298228369818795,
      "compression_ratio": 1.28,
      "no_speech_prob": 0.46974462270736694
    }
  ],
  "processing_metadata": {
    "processed_at": "2025-06-26T02:39:17.963730",
    "whisper_model": "small",
    "personality_detected": "bloomy",
    "domain_focus": "finance_excel"
  },
  "source_metadata": {
    "url": "https://www.youtube.com/watch?v=lIB2T5AlsBM",
    "title": "Bond Pricing Models",
    "category": "Financial Analysis",
    "difficulty": "advanced",
    "key_topics": [
      "bonds",
      "pricing",
      "models",
      "Excel"
    ],
    "priority": "medium"
  }
}