{
  "video_id": "lSKTZAn2SU4",
  "video_url": "https://www.youtube.com/watch?v=lSKTZAn2SU4",
  "video_info": {
    "title": "How to use the Bloomberg Query Language (BQL) Builder for cross-sectional data in Excel (2 minutes)",
    "uploader": "ExplainHowToSimply",
    "channel": "ExplainHowToSimply",
    "duration": 120,
    "upload_date": "20210906",
    "view_count": 1513,
    "description": "This short tutorial explains how to simply use the Bloomberg Query Language (BQL) Builder in Excel to efficiently retrieve and download cross-sectional data of the current S&P500 constituents from the Bloomberg Terminal directly in Excel. If you know how to deal with the BQL Builder, it is straightforward to efficiently get your financial data.\n\nIf you enjoyed the video, want to learn more about the Bloomberg Terminal, and would like to support my channel, I created Bloomberg Terminal Beginner's Guide e-book: https://explainhowtosimply.gumroad.com/l/BloombergTerminalBeginnersGuide",
    "tags": [
      "Bloomberg Tutorial",
      "Excel Bloomberg Add-in",
      "Bloomberg Terminal",
      "Historical Financial Data",
      "short financial data tutorial",
      "Bloomberg in Excel",
      "Bloomberg time series data download",
      "download financial data from Bloomberg",
      "Excel spreadsheet with financial stock price data",
      "Short tutorial on Bloomberg",
      "Thesis in Finance",
      "Quantitative Research in Finance",
      "Bloomberg financial data",
      "Bloomberg Query Language (BQL) Builder",
      "BQL Builder",
      "Financial cross-sectional data",
      "S&P500 constituants"
    ]
  },
  "personality": "bloomy",
  "domain": "finance_excel",
  "expertise_areas": [
    "bloomberg",
    "excel",
    "finance",
    "data analysis",
    "trading",
    "financial modeling"
  ],
  "language": "en",
  "text": " Hi everyone, in this short video I explain how to simply use the Bloomberg Query Language short BQL in Excel to compare financial data of the current S&P 500 constituents. For that you need to be locked into the Bloomberg terminal and you also need to have the Bloomberg Excel add-in. The BQL builder is an efficient way to retrieve financial data directly into an Excel spreadsheet. So let's look at the cross-sectional data of the S&P 500 index. For that you just go here to this function, member of the S&P 500 index. So we have the biggest 500 companies in there and we want their last price and also their current market capitalization. Just as a small example, then we can look at the preview how the data would look like. In column A we have the 500 company tickers, in B we have the last price and in column C we have the current market capitalization. So now we can just insert and run and now we have for each single company in the S&P 500 the ticker, the current last price and the current market capitalization. And we can change the current market capitalization into dollars. So if this video helped please leave a like and subscribe for more content. Thanks a lot and have a nice day.",
  "segments": [
    {
      "id": 0,
      "seek": 0,
      "start": 0.0,
      "end": 9.86,
      "text": " Hi everyone, in this short video I explain how to simply use the Bloomberg Query Language",
      "tokens": [
        50364,
        2421,
        1518,
        11,
        294,
        341,
        2099,
        960,
        286,
        2903,
        577,
        281,
        2935,
        764,
        264,
        40363,
        2326,
        2109,
        24445,
        50857
      ],
      "temperature": 0.0,
      "avg_logprob": -0.16956043243408203,
      "compression_ratio": 1.471502590673575,
      "no_speech_prob": 0.09773945063352585
    },
    {
      "id": 1,
      "seek": 0,
      "start": 9.86,
      "end": 18.54,
      "text": " short BQL in Excel to compare financial data of the current S&P 500 constituents.",
      "tokens": [
        50857,
        2099,
        363,
        13695,
        294,
        19060,
        281,
        6794,
        4669,
        1412,
        295,
        264,
        2190,
        318,
        5,
        47,
        5923,
        30847,
        13,
        51291
      ],
      "temperature": 0.0,
      "avg_logprob": -0.16956043243408203,
      "compression_ratio": 1.471502590673575,
      "no_speech_prob": 0.09773945063352585
    },
    {
      "id": 2,
      "seek": 0,
      "start": 18.54,
      "end": 25.0,
      "text": " For that you need to be locked into the Bloomberg terminal and you also need to have the Bloomberg",
      "tokens": [
        51291,
        1171,
        300,
        291,
        643,
        281,
        312,
        9376,
        666,
        264,
        40363,
        14709,
        293,
        291,
        611,
        643,
        281,
        362,
        264,
        40363,
        51614
      ],
      "temperature": 0.0,
      "avg_logprob": -0.16956043243408203,
      "compression_ratio": 1.471502590673575,
      "no_speech_prob": 0.09773945063352585
    },
    {
      "id": 3,
      "seek": 0,
      "start": 25.0,
      "end": 26.580000000000002,
      "text": " Excel add-in.",
      "tokens": [
        51614,
        19060,
        909,
        12,
        259,
        13,
        51693
      ],
      "temperature": 0.0,
      "avg_logprob": -0.16956043243408203,
      "compression_ratio": 1.471502590673575,
      "no_speech_prob": 0.09773945063352585
    },
    {
      "id": 4,
      "seek": 2658,
      "start": 26.58,
      "end": 35.54,
      "text": " The BQL builder is an efficient way to retrieve financial data directly into an Excel spreadsheet.",
      "tokens": [
        50364,
        440,
        363,
        13695,
        27377,
        307,
        364,
        7148,
        636,
        281,
        30254,
        4669,
        1412,
        3838,
        666,
        364,
        19060,
        27733,
        13,
        50812
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12368033826351166,
      "compression_ratio": 1.3742690058479532,
      "no_speech_prob": 0.06531625241041183
    },
    {
      "id": 5,
      "seek": 2658,
      "start": 35.54,
      "end": 42.3,
      "text": " So let's look at the cross-sectional data of the S&P 500 index.",
      "tokens": [
        50812,
        407,
        718,
        311,
        574,
        412,
        264,
        3278,
        12,
        11963,
        304,
        1412,
        295,
        264,
        318,
        5,
        47,
        5923,
        8186,
        13,
        51150
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12368033826351166,
      "compression_ratio": 1.3742690058479532,
      "no_speech_prob": 0.06531625241041183
    },
    {
      "id": 6,
      "seek": 2658,
      "start": 42.3,
      "end": 51.42,
      "text": " For that you just go here to this function, member of the S&P 500 index.",
      "tokens": [
        51150,
        1171,
        300,
        291,
        445,
        352,
        510,
        281,
        341,
        2445,
        11,
        4006,
        295,
        264,
        318,
        5,
        47,
        5923,
        8186,
        13,
        51606
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12368033826351166,
      "compression_ratio": 1.3742690058479532,
      "no_speech_prob": 0.06531625241041183
    },
    {
      "id": 7,
      "seek": 5142,
      "start": 51.42,
      "end": 60.040000000000006,
      "text": " So we have the biggest 500 companies in there and we want their last price and also their",
      "tokens": [
        50364,
        407,
        321,
        362,
        264,
        3880,
        5923,
        3431,
        294,
        456,
        293,
        321,
        528,
        641,
        1036,
        3218,
        293,
        611,
        641,
        50795
      ],
      "temperature": 0.0,
      "avg_logprob": -0.16851853389366,
      "compression_ratio": 1.417808219178082,
      "no_speech_prob": 0.1519029140472412
    },
    {
      "id": 8,
      "seek": 5142,
      "start": 60.040000000000006,
      "end": 64.1,
      "text": " current market capitalization.",
      "tokens": [
        50795,
        2190,
        2142,
        4238,
        2144,
        13,
        50998
      ],
      "temperature": 0.0,
      "avg_logprob": -0.16851853389366,
      "compression_ratio": 1.417808219178082,
      "no_speech_prob": 0.1519029140472412
    },
    {
      "id": 9,
      "seek": 5142,
      "start": 64.1,
      "end": 72.9,
      "text": " Just as a small example, then we can look at the preview how the data would look like.",
      "tokens": [
        50998,
        1449,
        382,
        257,
        1359,
        1365,
        11,
        550,
        321,
        393,
        574,
        412,
        264,
        14281,
        577,
        264,
        1412,
        576,
        574,
        411,
        13,
        51438
      ],
      "temperature": 0.0,
      "avg_logprob": -0.16851853389366,
      "compression_ratio": 1.417808219178082,
      "no_speech_prob": 0.1519029140472412
    },
    {
      "id": 10,
      "seek": 7290,
      "start": 72.9,
      "end": 83.30000000000001,
      "text": " In column A we have the 500 company tickers, in B we have the last price and in column",
      "tokens": [
        50364,
        682,
        7738,
        316,
        321,
        362,
        264,
        5923,
        2237,
        5204,
        433,
        11,
        294,
        363,
        321,
        362,
        264,
        1036,
        3218,
        293,
        294,
        7738,
        50884
      ],
      "temperature": 0.0,
      "avg_logprob": -0.17360831115205408,
      "compression_ratio": 1.469387755102041,
      "no_speech_prob": 0.3799356520175934
    },
    {
      "id": 11,
      "seek": 7290,
      "start": 83.30000000000001,
      "end": 87.18,
      "text": " C we have the current market capitalization.",
      "tokens": [
        50884,
        383,
        321,
        362,
        264,
        2190,
        2142,
        4238,
        2144,
        13,
        51078
      ],
      "temperature": 0.0,
      "avg_logprob": -0.17360831115205408,
      "compression_ratio": 1.469387755102041,
      "no_speech_prob": 0.3799356520175934
    },
    {
      "id": 12,
      "seek": 7290,
      "start": 87.18,
      "end": 96.9,
      "text": " So now we can just insert and run and now we have for each single company in the S&P",
      "tokens": [
        51078,
        407,
        586,
        321,
        393,
        445,
        8969,
        293,
        1190,
        293,
        586,
        321,
        362,
        337,
        1184,
        2167,
        2237,
        294,
        264,
        318,
        5,
        47,
        51564
      ],
      "temperature": 0.0,
      "avg_logprob": -0.17360831115205408,
      "compression_ratio": 1.469387755102041,
      "no_speech_prob": 0.3799356520175934
    },
    {
      "id": 13,
      "seek": 9690,
      "start": 96.9,
      "end": 105.06,
      "text": " 500 the ticker, the current last price and the current market capitalization.",
      "tokens": [
        50364,
        5923,
        264,
        5204,
        260,
        11,
        264,
        2190,
        1036,
        3218,
        293,
        264,
        2190,
        2142,
        4238,
        2144,
        13,
        50772
      ],
      "temperature": 0.0,
      "avg_logprob": -0.17053482180736104,
      "compression_ratio": 1.58125,
      "no_speech_prob": 0.6548076868057251
    },
    {
      "id": 14,
      "seek": 9690,
      "start": 105.06,
      "end": 111.02000000000001,
      "text": " And we can change the current market capitalization into dollars.",
      "tokens": [
        50772,
        400,
        321,
        393,
        1319,
        264,
        2190,
        2142,
        4238,
        2144,
        666,
        3808,
        13,
        51070
      ],
      "temperature": 0.0,
      "avg_logprob": -0.17053482180736104,
      "compression_ratio": 1.58125,
      "no_speech_prob": 0.6548076868057251
    },
    {
      "id": 15,
      "seek": 9690,
      "start": 111.02000000000001,
      "end": 117.02000000000001,
      "text": " So if this video helped please leave a like and subscribe for more content.",
      "tokens": [
        51070,
        407,
        498,
        341,
        960,
        4254,
        1767,
        1856,
        257,
        411,
        293,
        3022,
        337,
        544,
        2701,
        13,
        51370
      ],
      "temperature": 0.0,
      "avg_logprob": -0.17053482180736104,
      "compression_ratio": 1.58125,
      "no_speech_prob": 0.6548076868057251
    },
    {
      "id": 16,
      "seek": 9690,
      "start": 117.02000000000001,
      "end": 119.02000000000001,
      "text": " Thanks a lot and have a nice day.",
      "tokens": [
        51370,
        2561,
        257,
        688,
        293,
        362,
        257,
        1481,
        786,
        13,
        51470
      ],
      "temperature": 0.0,
      "avg_logprob": -0.17053482180736104,
      "compression_ratio": 1.58125,
      "no_speech_prob": 0.6548076868057251
    }
  ],
  "processing_metadata": {
    "processed_at": "2025-06-26T02:43:45.233597",
    "whisper_model": "small",
    "personality_detected": "bloomy",
    "domain_focus": "finance_excel"
  },
  "source_metadata": {
    "url": "https://www.youtube.com/watch?v=lSKTZAn2SU4",
    "title": "Bloomberg Fixed Income",
    "category": "Bloomberg Terminal",
    "difficulty": "intermediate",
    "key_topics": [
      "Bloomberg",
      "fixed income",
      "bonds",
      "analysis"
    ],
    "priority": "high"
  }
}