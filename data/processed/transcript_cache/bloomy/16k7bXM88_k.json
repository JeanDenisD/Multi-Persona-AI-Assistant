{
  "video_id": "16k7bXM88_k",
  "video_url": "https://www.youtube.com/watch?v=16k7bXM88_k",
  "video_info": {
    "title": "How to use the Bloomberg Query Language (BQL) Builder for current data in Excel (2 minutes)",
    "uploader": "ExplainHowToSimply",
    "channel": "ExplainHowToSimply",
    "duration": 114,
    "upload_date": "20210906",
    "view_count": 3071,
    "description": "This short tutorial explains how to simply use the Bloomberg Query Language (BQL) Builder in Excel to efficiently retrieve and download financial data from the Bloomberg Terminal directly in Excel. If you know how to deal with the BQL Builder, it is straightforward to efficiently get your financial data.\n\nIf you enjoyed the video, want to learn more about the Bloomberg Terminal, and would like to support my channel, I created Bloomberg Terminal Beginner's Guide e-book: https://explainhowtosimply.gumroad.com/l/BloombergTerminalBeginnersGuide",
    "tags": [
      "Bloomberg Tutorial",
      "Excel Bloomberg Add-in",
      "Bloomberg Terminal",
      "Historical Financial Data",
      "short financial data tutorial",
      "Bloomberg in Excel",
      "Historical stock last prices",
      "Bloomberg time series data download",
      "download financial data from Bloomberg",
      "Excel spreadsheet with financial stock price data",
      "Historical stock price data",
      "Short tutorial on Bloomberg",
      "Thesis in Finance",
      "Quantitative Research in Finance",
      "Bloomberg financial data",
      "Bloomberg Query Language Builder",
      "BQL Builder"
    ]
  },
  "personality": "bloomy",
  "domain": "finance_excel",
  "expertise_areas": [
    "bloomberg",
    "excel",
    "finance",
    "data analysis",
    "trading",
    "financial modeling"
  ],
  "language": "en",
  "text": " Hello everyone, in this short video I explain how to use the Bloomberg Query Language Short BQL Builder in Excel to compare current financial data of specific companies. For that you need to be locked into the Bloomberg terminal and install the Bloomberg Excel add-in. The BQL Builder is a more efficient way to retrieve financial data compared with the BDP, BDH or BDS formulas. So we can specify and download multiple securities and also multiple fields at the same time. I want to get information for Apple and Microsoft. Now we can specify fields we are interested in and I'm interested in the current market capitalization, the price earnings ratio and the basic earnings per share. So now I specify the securities and also the fields so we can have a look at it. So we have the preview with the firm ticker symbols, their current market capitalization, the price earnings ratio and the basic earnings per share at the current state. And then we can just insert and run. So now we retrieved the data with the information we wanted. This was just a really simple example of the BQL Builder. I hope you liked the video. Thanks a lot and see you next time.",
  "segments": [
    {
      "id": 0,
      "seek": 0,
      "start": 0.0,
      "end": 9.700000000000001,
      "text": " Hello everyone, in this short video I explain how to use the Bloomberg Query Language Short",
      "tokens": [
        50364,
        2425,
        1518,
        11,
        294,
        341,
        2099,
        960,
        286,
        2903,
        577,
        281,
        764,
        264,
        40363,
        2326,
        2109,
        24445,
        16881,
        50849
      ],
      "temperature": 0.0,
      "avg_logprob": -0.2000070478095383,
      "compression_ratio": 1.488888888888889,
      "no_speech_prob": 0.07711490243673325
    },
    {
      "id": 1,
      "seek": 0,
      "start": 9.700000000000001,
      "end": 17.66,
      "text": " BQL Builder in Excel to compare current financial data of specific companies.",
      "tokens": [
        50849,
        363,
        13695,
        11875,
        260,
        294,
        19060,
        281,
        6794,
        2190,
        4669,
        1412,
        295,
        2685,
        3431,
        13,
        51247
      ],
      "temperature": 0.0,
      "avg_logprob": -0.2000070478095383,
      "compression_ratio": 1.488888888888889,
      "no_speech_prob": 0.07711490243673325
    },
    {
      "id": 2,
      "seek": 0,
      "start": 17.66,
      "end": 25.080000000000002,
      "text": " For that you need to be locked into the Bloomberg terminal and install the Bloomberg Excel add-in.",
      "tokens": [
        51247,
        1171,
        300,
        291,
        643,
        281,
        312,
        9376,
        666,
        264,
        40363,
        14709,
        293,
        3625,
        264,
        40363,
        19060,
        909,
        12,
        259,
        13,
        51618
      ],
      "temperature": 0.0,
      "avg_logprob": -0.2000070478095383,
      "compression_ratio": 1.488888888888889,
      "no_speech_prob": 0.07711490243673325
    },
    {
      "id": 3,
      "seek": 2508,
      "start": 25.08,
      "end": 31.759999999999998,
      "text": " The BQL Builder is a more efficient way to retrieve financial data compared with the",
      "tokens": [
        50364,
        440,
        363,
        13695,
        11875,
        260,
        307,
        257,
        544,
        7148,
        636,
        281,
        30254,
        4669,
        1412,
        5347,
        365,
        264,
        50698
      ],
      "temperature": 0.0,
      "avg_logprob": -0.16133372967059795,
      "compression_ratio": 1.408839779005525,
      "no_speech_prob": 0.21219214797019958
    },
    {
      "id": 4,
      "seek": 2508,
      "start": 31.759999999999998,
      "end": 37.06,
      "text": " BDP, BDH or BDS formulas.",
      "tokens": [
        50698,
        363,
        11373,
        11,
        363,
        35,
        39,
        420,
        363,
        11844,
        30546,
        13,
        50963
      ],
      "temperature": 0.0,
      "avg_logprob": -0.16133372967059795,
      "compression_ratio": 1.408839779005525,
      "no_speech_prob": 0.21219214797019958
    },
    {
      "id": 5,
      "seek": 2508,
      "start": 37.06,
      "end": 45.84,
      "text": " So we can specify and download multiple securities and also multiple fields at the same time.",
      "tokens": [
        50963,
        407,
        321,
        393,
        16500,
        293,
        5484,
        3866,
        38597,
        293,
        611,
        3866,
        7909,
        412,
        264,
        912,
        565,
        13,
        51402
      ],
      "temperature": 0.0,
      "avg_logprob": -0.16133372967059795,
      "compression_ratio": 1.408839779005525,
      "no_speech_prob": 0.21219214797019958
    },
    {
      "id": 6,
      "seek": 2508,
      "start": 45.84,
      "end": 54.08,
      "text": " I want to get information for Apple and Microsoft.",
      "tokens": [
        51402,
        286,
        528,
        281,
        483,
        1589,
        337,
        6373,
        293,
        8116,
        13,
        51814
      ],
      "temperature": 0.0,
      "avg_logprob": -0.16133372967059795,
      "compression_ratio": 1.408839779005525,
      "no_speech_prob": 0.21219214797019958
    },
    {
      "id": 7,
      "seek": 5408,
      "start": 54.08,
      "end": 59.72,
      "text": " Now we can specify fields we are interested in and I'm interested in the current market",
      "tokens": [
        50364,
        823,
        321,
        393,
        16500,
        7909,
        321,
        366,
        3102,
        294,
        293,
        286,
        478,
        3102,
        294,
        264,
        2190,
        2142,
        50646
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1637401091746795,
      "compression_ratio": 1.8,
      "no_speech_prob": 0.04049760848283768
    },
    {
      "id": 8,
      "seek": 5408,
      "start": 59.72,
      "end": 71.36,
      "text": " capitalization, the price earnings ratio and the basic earnings per share.",
      "tokens": [
        50646,
        4238,
        2144,
        11,
        264,
        3218,
        20548,
        8509,
        293,
        264,
        3875,
        20548,
        680,
        2073,
        13,
        51228
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1637401091746795,
      "compression_ratio": 1.8,
      "no_speech_prob": 0.04049760848283768
    },
    {
      "id": 9,
      "seek": 5408,
      "start": 71.36,
      "end": 77.36,
      "text": " So now I specify the securities and also the fields so we can have a look at it.",
      "tokens": [
        51228,
        407,
        586,
        286,
        16500,
        264,
        38597,
        293,
        611,
        264,
        7909,
        370,
        321,
        393,
        362,
        257,
        574,
        412,
        309,
        13,
        51528
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1637401091746795,
      "compression_ratio": 1.8,
      "no_speech_prob": 0.04049760848283768
    },
    {
      "id": 10,
      "seek": 5408,
      "start": 77.36,
      "end": 84.03999999999999,
      "text": " So we have the preview with the firm ticker symbols, their current market capitalization,",
      "tokens": [
        51528,
        407,
        321,
        362,
        264,
        14281,
        365,
        264,
        6174,
        5204,
        260,
        16944,
        11,
        641,
        2190,
        2142,
        4238,
        2144,
        11,
        51862
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1637401091746795,
      "compression_ratio": 1.8,
      "no_speech_prob": 0.04049760848283768
    },
    {
      "id": 11,
      "seek": 8404,
      "start": 84.04,
      "end": 92.0,
      "text": " the price earnings ratio and the basic earnings per share at the current state.",
      "tokens": [
        50364,
        264,
        3218,
        20548,
        8509,
        293,
        264,
        3875,
        20548,
        680,
        2073,
        412,
        264,
        2190,
        1785,
        13,
        50762
      ],
      "temperature": 0.0,
      "avg_logprob": -0.17650078535079955,
      "compression_ratio": 1.5572916666666667,
      "no_speech_prob": 0.04932510480284691
    },
    {
      "id": 12,
      "seek": 8404,
      "start": 92.0,
      "end": 96.0,
      "text": " And then we can just insert and run.",
      "tokens": [
        50762,
        400,
        550,
        321,
        393,
        445,
        8969,
        293,
        1190,
        13,
        50962
      ],
      "temperature": 0.0,
      "avg_logprob": -0.17650078535079955,
      "compression_ratio": 1.5572916666666667,
      "no_speech_prob": 0.04932510480284691
    },
    {
      "id": 13,
      "seek": 8404,
      "start": 96.0,
      "end": 101.16000000000001,
      "text": " So now we retrieved the data with the information we wanted.",
      "tokens": [
        50962,
        407,
        586,
        321,
        19817,
        937,
        264,
        1412,
        365,
        264,
        1589,
        321,
        1415,
        13,
        51220
      ],
      "temperature": 0.0,
      "avg_logprob": -0.17650078535079955,
      "compression_ratio": 1.5572916666666667,
      "no_speech_prob": 0.04932510480284691
    },
    {
      "id": 14,
      "seek": 8404,
      "start": 101.16000000000001,
      "end": 105.44000000000001,
      "text": " This was just a really simple example of the BQL Builder.",
      "tokens": [
        51220,
        639,
        390,
        445,
        257,
        534,
        2199,
        1365,
        295,
        264,
        363,
        13695,
        11875,
        260,
        13,
        51434
      ],
      "temperature": 0.0,
      "avg_logprob": -0.17650078535079955,
      "compression_ratio": 1.5572916666666667,
      "no_speech_prob": 0.04932510480284691
    },
    {
      "id": 15,
      "seek": 8404,
      "start": 105.44000000000001,
      "end": 107.80000000000001,
      "text": " I hope you liked the video.",
      "tokens": [
        51434,
        286,
        1454,
        291,
        4501,
        264,
        960,
        13,
        51552
      ],
      "temperature": 0.0,
      "avg_logprob": -0.17650078535079955,
      "compression_ratio": 1.5572916666666667,
      "no_speech_prob": 0.04932510480284691
    },
    {
      "id": 16,
      "seek": 8404,
      "start": 107.80000000000001,
      "end": 110.24000000000001,
      "text": " Thanks a lot and see you next time.",
      "tokens": [
        51552,
        2561,
        257,
        688,
        293,
        536,
        291,
        958,
        565,
        13,
        51674
      ],
      "temperature": 0.0,
      "avg_logprob": -0.17650078535079955,
      "compression_ratio": 1.5572916666666667,
      "no_speech_prob": 0.04932510480284691
    }
  ],
  "processing_metadata": {
    "processed_at": "2025-06-26T02:45:05.706641",
    "whisper_model": "small",
    "personality_detected": "bloomy",
    "domain_focus": "finance_excel"
  },
  "source_metadata": {
    "url": "https://www.youtube.com/watch?v=16k7bXM88_k",
    "title": "Currency Analysis Tools",
    "category": "Financial Analysis",
    "difficulty": "intermediate",
    "key_topics": [
      "currency",
      "forex",
      "analysis",
      "Bloomberg"
    ],
    "priority": "medium"
  }
}