{
  "video_id": "9eQwqtfjdgM",
  "video_url": "https://www.youtube.com/watch?v=9eQwqtfjdgM",
  "video_info": {
    "title": "Earnings per share (EPS) data of the S&P500 constituents from Bloomberg in Excel",
    "uploader": "ExplainHowToSimply",
    "channel": "ExplainHowToSimply",
    "duration": 244,
    "upload_date": "20211106",
    "view_count": 2386,
    "description": "This short tutorial explains how to simply retrieve data points like the earnings per share (EPS) of all the 500 constituents of the S&P500 from Bloomberg through the Spreadsheet Builder with the Bloomberg Excel Add-in. It shows how to select a specific index, to get all the companies which are in the index at the moment. The data fields we are looking for are the basic EPS and the last prices of these companies to further compare and calculate the current price to earnings ratio (P/E ratio).\n\nIf you enjoyed the video, want to learn more about the Bloomberg Terminal, and would like to support my channel, I created Bloomberg Terminal Beginner's Guide e-book: https://explainhowtosimply.gumroad.com/l/BloombergTerminalBeginnersGuide",
    "tags": [
      "Bloomberg Tutorial",
      "Excel Bloomberg Add-in",
      "Bloomberg Terminal",
      "Financial Data",
      "short financial data tutorial",
      "Bloomberg in Excel",
      "Bloomberg data download",
      "download financial data from Bloomberg",
      "Excel spreadsheet with financial stock price data",
      "Short tutorial on Bloomberg",
      "Thesis in Finance",
      "Quantitative Research in Finance",
      "Bloomberg financial data",
      "Bloomberg Spreadsheet builder",
      "EPS data",
      "S&P500 constituants",
      "Earnings per share data Bloomberg",
      "P/E ratio",
      "EPS Bloomberg"
    ]
  },
  "personality": "bloomy",
  "domain": "finance_excel",
  "expertise_areas": [
    "bloomberg",
    "excel",
    "finance",
    "data analysis",
    "trading",
    "financial modeling"
  ],
  "language": "en",
  "text": " Hello everyone, I hope you are all doing great. I received a comment of a subscriber requesting a tutorial on how to bring earnings per share EPS data to Excel. Therefore, I will explain how to simply retrieve earnings per share data of the constituents of the S&P 500 from Bloomberg through the spreadsheet builder in Excel. As you know, the earnings per share is the portion of a company's profit allocated to each share. It is only comparable with other companies if we also take the share price into consideration. So to get the data, you have to be locked into Bloomberg and installed the Bloomberg Excel add-in. Okay, to retrieve the data for all the S&P 500 constituents, we just go to spreadsheet builder, then we go to blank data table and here we can select our securities. We either can type specific companies and just use the Bloomberg ticker symbol or we can also take all companies of a specific equity index. So we just go here into the equity index and as you know, the SPX is the S&P 500 index with all the constituents here and to add them to our selected securities list on the right, we just click add. And now we basically have all the 500 companies in here with the Bloomberg ticker with UN equity at the end, which is just the Bloomberg convention. Then we just click next and now we can select the fields and in our case, we want the earnings per share. And here we don't want the Bloomberg estimate, we want the basic earnings per share. And if we want to compare the earnings per share of all the constituents, we also need the last price. So the last price just gives us the last price traded for these companies on the last day. And when we now have these two selected fields where we want data, we just go to next. And now here you actually see we have all the securities here, all the 500 constituents and we have the field name earnings per share with the data here and also the last price in the next column. So we just click finish. And voila, here we already have our requested data. So for example here for Apple, we have earnings per share of 5.67 and the share price closed yesterday at 151.28. And with this data, we can just basically calculate the price earnings ratio. So the PE ratio, then here we would just divide our price with the earnings per share. And with that, we can compare all the companies. So we have the price earnings ratio. So the price earnings ratio is just the market value per share divided by the earnings per share. And the other way around, we can also divide the earnings per share by the market value of the share, so the price. And this earnings yield would give us a rate of return of the investment. So we just divide the earnings per share with the last price. So with that, we have all the data for the 500 constituents of the S&P 500. With this methodology, you can basically also retrieve other data points from Bloomberg, really simple through the spreadsheet builder. I hope this answered the question of the comment and I hope you all got some value out of it. Please subscribe for more content on how to use Bloomberg. Thanks a lot and have a nice day.",
  "segments": [
    {
      "id": 0,
      "seek": 0,
      "start": 0.0,
      "end": 6.72,
      "text": " Hello everyone, I hope you are all doing great.",
      "tokens": [
        50364,
        2425,
        1518,
        11,
        286,
        1454,
        291,
        366,
        439,
        884,
        869,
        13,
        50700
      ],
      "temperature": 0.0,
      "avg_logprob": -0.16867859332592455,
      "compression_ratio": 1.5046296296296295,
      "no_speech_prob": 0.08072000741958618
    },
    {
      "id": 1,
      "seek": 0,
      "start": 6.72,
      "end": 13.96,
      "text": " I received a comment of a subscriber requesting a tutorial on how to bring earnings per share",
      "tokens": [
        50700,
        286,
        4613,
        257,
        2871,
        295,
        257,
        26122,
        31937,
        257,
        7073,
        322,
        577,
        281,
        1565,
        20548,
        680,
        2073,
        51062
      ],
      "temperature": 0.0,
      "avg_logprob": -0.16867859332592455,
      "compression_ratio": 1.5046296296296295,
      "no_speech_prob": 0.08072000741958618
    },
    {
      "id": 2,
      "seek": 0,
      "start": 13.96,
      "end": 16.240000000000002,
      "text": " EPS data to Excel.",
      "tokens": [
        51062,
        462,
        6273,
        1412,
        281,
        19060,
        13,
        51176
      ],
      "temperature": 0.0,
      "avg_logprob": -0.16867859332592455,
      "compression_ratio": 1.5046296296296295,
      "no_speech_prob": 0.08072000741958618
    },
    {
      "id": 3,
      "seek": 0,
      "start": 16.240000000000002,
      "end": 23.400000000000002,
      "text": " Therefore, I will explain how to simply retrieve earnings per share data of the constituents",
      "tokens": [
        51176,
        7504,
        11,
        286,
        486,
        2903,
        577,
        281,
        2935,
        30254,
        20548,
        680,
        2073,
        1412,
        295,
        264,
        30847,
        51534
      ],
      "temperature": 0.0,
      "avg_logprob": -0.16867859332592455,
      "compression_ratio": 1.5046296296296295,
      "no_speech_prob": 0.08072000741958618
    },
    {
      "id": 4,
      "seek": 0,
      "start": 23.400000000000002,
      "end": 28.72,
      "text": " of the S&P 500 from Bloomberg through the spreadsheet builder in Excel.",
      "tokens": [
        51534,
        295,
        264,
        318,
        5,
        47,
        5923,
        490,
        40363,
        807,
        264,
        27733,
        27377,
        294,
        19060,
        13,
        51800
      ],
      "temperature": 0.0,
      "avg_logprob": -0.16867859332592455,
      "compression_ratio": 1.5046296296296295,
      "no_speech_prob": 0.08072000741958618
    },
    {
      "id": 5,
      "seek": 2872,
      "start": 28.72,
      "end": 34.96,
      "text": " As you know, the earnings per share is the portion of a company's profit allocated to",
      "tokens": [
        50364,
        1018,
        291,
        458,
        11,
        264,
        20548,
        680,
        2073,
        307,
        264,
        8044,
        295,
        257,
        2237,
        311,
        7475,
        29772,
        281,
        50676
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1763350101227456,
      "compression_ratio": 1.575,
      "no_speech_prob": 0.08775011450052261
    },
    {
      "id": 6,
      "seek": 2872,
      "start": 34.96,
      "end": 36.08,
      "text": " each share.",
      "tokens": [
        50676,
        1184,
        2073,
        13,
        50732
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1763350101227456,
      "compression_ratio": 1.575,
      "no_speech_prob": 0.08775011450052261
    },
    {
      "id": 7,
      "seek": 2872,
      "start": 36.08,
      "end": 42.879999999999995,
      "text": " It is only comparable with other companies if we also take the share price into consideration.",
      "tokens": [
        50732,
        467,
        307,
        787,
        25323,
        365,
        661,
        3431,
        498,
        321,
        611,
        747,
        264,
        2073,
        3218,
        666,
        12381,
        13,
        51072
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1763350101227456,
      "compression_ratio": 1.575,
      "no_speech_prob": 0.08775011450052261
    },
    {
      "id": 8,
      "seek": 2872,
      "start": 42.879999999999995,
      "end": 48.16,
      "text": " So to get the data, you have to be locked into Bloomberg and installed the Bloomberg",
      "tokens": [
        51072,
        407,
        281,
        483,
        264,
        1412,
        11,
        291,
        362,
        281,
        312,
        9376,
        666,
        40363,
        293,
        8899,
        264,
        40363,
        51336
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1763350101227456,
      "compression_ratio": 1.575,
      "no_speech_prob": 0.08775011450052261
    },
    {
      "id": 9,
      "seek": 2872,
      "start": 48.16,
      "end": 49.16,
      "text": " Excel add-in.",
      "tokens": [
        51336,
        19060,
        909,
        12,
        259,
        13,
        51386
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1763350101227456,
      "compression_ratio": 1.575,
      "no_speech_prob": 0.08775011450052261
    },
    {
      "id": 10,
      "seek": 2872,
      "start": 49.16,
      "end": 56.599999999999994,
      "text": " Okay, to retrieve the data for all the S&P 500 constituents, we just go to spreadsheet",
      "tokens": [
        51386,
        1033,
        11,
        281,
        30254,
        264,
        1412,
        337,
        439,
        264,
        318,
        5,
        47,
        5923,
        30847,
        11,
        321,
        445,
        352,
        281,
        27733,
        51758
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1763350101227456,
      "compression_ratio": 1.575,
      "no_speech_prob": 0.08775011450052261
    },
    {
      "id": 11,
      "seek": 5660,
      "start": 56.6,
      "end": 63.760000000000005,
      "text": " builder, then we go to blank data table and here we can select our securities.",
      "tokens": [
        50364,
        27377,
        11,
        550,
        321,
        352,
        281,
        8247,
        1412,
        3199,
        293,
        510,
        321,
        393,
        3048,
        527,
        38597,
        13,
        50722
      ],
      "temperature": 0.0,
      "avg_logprob": -0.13830898969601363,
      "compression_ratio": 1.5532994923857868,
      "no_speech_prob": 0.48774686455726624
    },
    {
      "id": 12,
      "seek": 5660,
      "start": 63.760000000000005,
      "end": 69.76,
      "text": " We either can type specific companies and just use the Bloomberg ticker symbol or we",
      "tokens": [
        50722,
        492,
        2139,
        393,
        2010,
        2685,
        3431,
        293,
        445,
        764,
        264,
        40363,
        5204,
        260,
        5986,
        420,
        321,
        51022
      ],
      "temperature": 0.0,
      "avg_logprob": -0.13830898969601363,
      "compression_ratio": 1.5532994923857868,
      "no_speech_prob": 0.48774686455726624
    },
    {
      "id": 13,
      "seek": 5660,
      "start": 69.76,
      "end": 74.6,
      "text": " can also take all companies of a specific equity index.",
      "tokens": [
        51022,
        393,
        611,
        747,
        439,
        3431,
        295,
        257,
        2685,
        10769,
        8186,
        13,
        51264
      ],
      "temperature": 0.0,
      "avg_logprob": -0.13830898969601363,
      "compression_ratio": 1.5532994923857868,
      "no_speech_prob": 0.48774686455726624
    },
    {
      "id": 14,
      "seek": 5660,
      "start": 74.6,
      "end": 81.4,
      "text": " So we just go here into the equity index and as you know, the SPX is the S&P 500 index",
      "tokens": [
        51264,
        407,
        321,
        445,
        352,
        510,
        666,
        264,
        10769,
        8186,
        293,
        382,
        291,
        458,
        11,
        264,
        8420,
        55,
        307,
        264,
        318,
        5,
        47,
        5923,
        8186,
        51604
      ],
      "temperature": 0.0,
      "avg_logprob": -0.13830898969601363,
      "compression_ratio": 1.5532994923857868,
      "no_speech_prob": 0.48774686455726624
    },
    {
      "id": 15,
      "seek": 8140,
      "start": 81.4,
      "end": 87.24000000000001,
      "text": " with all the constituents here and to add them to our selected securities list on the",
      "tokens": [
        50364,
        365,
        439,
        264,
        30847,
        510,
        293,
        281,
        909,
        552,
        281,
        527,
        8209,
        38597,
        1329,
        322,
        264,
        50656
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1752074210198371,
      "compression_ratio": 1.6561085972850678,
      "no_speech_prob": 0.5318267345428467
    },
    {
      "id": 16,
      "seek": 8140,
      "start": 87.24000000000001,
      "end": 89.28,
      "text": " right, we just click add.",
      "tokens": [
        50656,
        558,
        11,
        321,
        445,
        2052,
        909,
        13,
        50758
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1752074210198371,
      "compression_ratio": 1.6561085972850678,
      "no_speech_prob": 0.5318267345428467
    },
    {
      "id": 17,
      "seek": 8140,
      "start": 89.28,
      "end": 96.2,
      "text": " And now we basically have all the 500 companies in here with the Bloomberg ticker with UN",
      "tokens": [
        50758,
        400,
        586,
        321,
        1936,
        362,
        439,
        264,
        5923,
        3431,
        294,
        510,
        365,
        264,
        40363,
        5204,
        260,
        365,
        8229,
        51104
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1752074210198371,
      "compression_ratio": 1.6561085972850678,
      "no_speech_prob": 0.5318267345428467
    },
    {
      "id": 18,
      "seek": 8140,
      "start": 96.2,
      "end": 99.80000000000001,
      "text": " equity at the end, which is just the Bloomberg convention.",
      "tokens": [
        51104,
        10769,
        412,
        264,
        917,
        11,
        597,
        307,
        445,
        264,
        40363,
        10286,
        13,
        51284
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1752074210198371,
      "compression_ratio": 1.6561085972850678,
      "no_speech_prob": 0.5318267345428467
    },
    {
      "id": 19,
      "seek": 8140,
      "start": 99.80000000000001,
      "end": 106.48,
      "text": " Then we just click next and now we can select the fields and in our case, we want the earnings",
      "tokens": [
        51284,
        1396,
        321,
        445,
        2052,
        958,
        293,
        586,
        321,
        393,
        3048,
        264,
        7909,
        293,
        294,
        527,
        1389,
        11,
        321,
        528,
        264,
        20548,
        51618
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1752074210198371,
      "compression_ratio": 1.6561085972850678,
      "no_speech_prob": 0.5318267345428467
    },
    {
      "id": 20,
      "seek": 8140,
      "start": 106.48,
      "end": 107.88000000000001,
      "text": " per share.",
      "tokens": [
        51618,
        680,
        2073,
        13,
        51688
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1752074210198371,
      "compression_ratio": 1.6561085972850678,
      "no_speech_prob": 0.5318267345428467
    },
    {
      "id": 21,
      "seek": 10788,
      "start": 107.88,
      "end": 113.64,
      "text": " And here we don't want the Bloomberg estimate, we want the basic earnings per share.",
      "tokens": [
        50364,
        400,
        510,
        321,
        500,
        380,
        528,
        264,
        40363,
        12539,
        11,
        321,
        528,
        264,
        3875,
        20548,
        680,
        2073,
        13,
        50652
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09010290837549902,
      "compression_ratio": 1.8159203980099503,
      "no_speech_prob": 0.10113503783941269
    },
    {
      "id": 22,
      "seek": 10788,
      "start": 113.64,
      "end": 118.47999999999999,
      "text": " And if we want to compare the earnings per share of all the constituents, we also need",
      "tokens": [
        50652,
        400,
        498,
        321,
        528,
        281,
        6794,
        264,
        20548,
        680,
        2073,
        295,
        439,
        264,
        30847,
        11,
        321,
        611,
        643,
        50894
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09010290837549902,
      "compression_ratio": 1.8159203980099503,
      "no_speech_prob": 0.10113503783941269
    },
    {
      "id": 23,
      "seek": 10788,
      "start": 118.47999999999999,
      "end": 122.6,
      "text": " the last price.",
      "tokens": [
        50894,
        264,
        1036,
        3218,
        13,
        51100
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09010290837549902,
      "compression_ratio": 1.8159203980099503,
      "no_speech_prob": 0.10113503783941269
    },
    {
      "id": 24,
      "seek": 10788,
      "start": 122.6,
      "end": 129.44,
      "text": " So the last price just gives us the last price traded for these companies on the last day.",
      "tokens": [
        51100,
        407,
        264,
        1036,
        3218,
        445,
        2709,
        505,
        264,
        1036,
        3218,
        27157,
        337,
        613,
        3431,
        322,
        264,
        1036,
        786,
        13,
        51442
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09010290837549902,
      "compression_ratio": 1.8159203980099503,
      "no_speech_prob": 0.10113503783941269
    },
    {
      "id": 25,
      "seek": 10788,
      "start": 129.44,
      "end": 135.96,
      "text": " And when we now have these two selected fields where we want data, we just go to next.",
      "tokens": [
        51442,
        400,
        562,
        321,
        586,
        362,
        613,
        732,
        8209,
        7909,
        689,
        321,
        528,
        1412,
        11,
        321,
        445,
        352,
        281,
        958,
        13,
        51768
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09010290837549902,
      "compression_ratio": 1.8159203980099503,
      "no_speech_prob": 0.10113503783941269
    },
    {
      "id": 26,
      "seek": 13596,
      "start": 135.96,
      "end": 141.64000000000001,
      "text": " And now here you actually see we have all the securities here, all the 500 constituents",
      "tokens": [
        50364,
        400,
        586,
        510,
        291,
        767,
        536,
        321,
        362,
        439,
        264,
        38597,
        510,
        11,
        439,
        264,
        5923,
        30847,
        50648
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12808508458344833,
      "compression_ratio": 1.6944444444444444,
      "no_speech_prob": 0.07093711942434311
    },
    {
      "id": 27,
      "seek": 13596,
      "start": 141.64000000000001,
      "end": 147.24,
      "text": " and we have the field name earnings per share with the data here and also the last price",
      "tokens": [
        50648,
        293,
        321,
        362,
        264,
        2519,
        1315,
        20548,
        680,
        2073,
        365,
        264,
        1412,
        510,
        293,
        611,
        264,
        1036,
        3218,
        50928
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12808508458344833,
      "compression_ratio": 1.6944444444444444,
      "no_speech_prob": 0.07093711942434311
    },
    {
      "id": 28,
      "seek": 13596,
      "start": 147.24,
      "end": 149.28,
      "text": " in the next column.",
      "tokens": [
        50928,
        294,
        264,
        958,
        7738,
        13,
        51030
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12808508458344833,
      "compression_ratio": 1.6944444444444444,
      "no_speech_prob": 0.07093711942434311
    },
    {
      "id": 29,
      "seek": 13596,
      "start": 149.28,
      "end": 152.8,
      "text": " So we just click finish.",
      "tokens": [
        51030,
        407,
        321,
        445,
        2052,
        2413,
        13,
        51206
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12808508458344833,
      "compression_ratio": 1.6944444444444444,
      "no_speech_prob": 0.07093711942434311
    },
    {
      "id": 30,
      "seek": 13596,
      "start": 152.8,
      "end": 157.16,
      "text": " And voila, here we already have our requested data.",
      "tokens": [
        51206,
        400,
        45565,
        11,
        510,
        321,
        1217,
        362,
        527,
        16436,
        1412,
        13,
        51424
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12808508458344833,
      "compression_ratio": 1.6944444444444444,
      "no_speech_prob": 0.07093711942434311
    },
    {
      "id": 31,
      "seek": 13596,
      "start": 157.16,
      "end": 164.60000000000002,
      "text": " So for example here for Apple, we have earnings per share of 5.67 and the share price closed",
      "tokens": [
        51424,
        407,
        337,
        1365,
        510,
        337,
        6373,
        11,
        321,
        362,
        20548,
        680,
        2073,
        295,
        1025,
        13,
        22452,
        293,
        264,
        2073,
        3218,
        5395,
        51796
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12808508458344833,
      "compression_ratio": 1.6944444444444444,
      "no_speech_prob": 0.07093711942434311
    },
    {
      "id": 32,
      "seek": 16460,
      "start": 164.6,
      "end": 168.35999999999999,
      "text": " yesterday at 151.28.",
      "tokens": [
        50364,
        5186,
        412,
        2119,
        16,
        13,
        11205,
        13,
        50552
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1253857347700331,
      "compression_ratio": 1.6625766871165644,
      "no_speech_prob": 0.1868218183517456
    },
    {
      "id": 33,
      "seek": 16460,
      "start": 168.35999999999999,
      "end": 173.24,
      "text": " And with this data, we can just basically calculate the price earnings ratio.",
      "tokens": [
        50552,
        400,
        365,
        341,
        1412,
        11,
        321,
        393,
        445,
        1936,
        8873,
        264,
        3218,
        20548,
        8509,
        13,
        50796
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1253857347700331,
      "compression_ratio": 1.6625766871165644,
      "no_speech_prob": 0.1868218183517456
    },
    {
      "id": 34,
      "seek": 16460,
      "start": 173.24,
      "end": 182.24,
      "text": " So the PE ratio, then here we would just divide our price with the earnings per share.",
      "tokens": [
        50796,
        407,
        264,
        24346,
        8509,
        11,
        550,
        510,
        321,
        576,
        445,
        9845,
        527,
        3218,
        365,
        264,
        20548,
        680,
        2073,
        13,
        51246
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1253857347700331,
      "compression_ratio": 1.6625766871165644,
      "no_speech_prob": 0.1868218183517456
    },
    {
      "id": 35,
      "seek": 16460,
      "start": 182.24,
      "end": 186.12,
      "text": " And with that, we can compare all the companies.",
      "tokens": [
        51246,
        400,
        365,
        300,
        11,
        321,
        393,
        6794,
        439,
        264,
        3431,
        13,
        51440
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1253857347700331,
      "compression_ratio": 1.6625766871165644,
      "no_speech_prob": 0.1868218183517456
    },
    {
      "id": 36,
      "seek": 16460,
      "start": 186.12,
      "end": 189.35999999999999,
      "text": " So we have the price earnings ratio.",
      "tokens": [
        51440,
        407,
        321,
        362,
        264,
        3218,
        20548,
        8509,
        13,
        51602
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1253857347700331,
      "compression_ratio": 1.6625766871165644,
      "no_speech_prob": 0.1868218183517456
    },
    {
      "id": 37,
      "seek": 18936,
      "start": 189.36,
      "end": 195.96,
      "text": " So the price earnings ratio is just the market value per share divided by the earnings per",
      "tokens": [
        50364,
        407,
        264,
        3218,
        20548,
        8509,
        307,
        445,
        264,
        2142,
        2158,
        680,
        2073,
        6666,
        538,
        264,
        20548,
        680,
        50694
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09057746536430271,
      "compression_ratio": 2.0173410404624277,
      "no_speech_prob": 0.002026466652750969
    },
    {
      "id": 38,
      "seek": 18936,
      "start": 195.96,
      "end": 197.04000000000002,
      "text": " share.",
      "tokens": [
        50694,
        2073,
        13,
        50748
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09057746536430271,
      "compression_ratio": 2.0173410404624277,
      "no_speech_prob": 0.002026466652750969
    },
    {
      "id": 39,
      "seek": 18936,
      "start": 197.04000000000002,
      "end": 203.16000000000003,
      "text": " And the other way around, we can also divide the earnings per share by the market value",
      "tokens": [
        50748,
        400,
        264,
        661,
        636,
        926,
        11,
        321,
        393,
        611,
        9845,
        264,
        20548,
        680,
        2073,
        538,
        264,
        2142,
        2158,
        51054
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09057746536430271,
      "compression_ratio": 2.0173410404624277,
      "no_speech_prob": 0.002026466652750969
    },
    {
      "id": 40,
      "seek": 18936,
      "start": 203.16000000000003,
      "end": 206.0,
      "text": " of the share, so the price.",
      "tokens": [
        51054,
        295,
        264,
        2073,
        11,
        370,
        264,
        3218,
        13,
        51196
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09057746536430271,
      "compression_ratio": 2.0173410404624277,
      "no_speech_prob": 0.002026466652750969
    },
    {
      "id": 41,
      "seek": 18936,
      "start": 206.0,
      "end": 211.10000000000002,
      "text": " And this earnings yield would give us a rate of return of the investment.",
      "tokens": [
        51196,
        400,
        341,
        20548,
        11257,
        576,
        976,
        505,
        257,
        3314,
        295,
        2736,
        295,
        264,
        6078,
        13,
        51451
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09057746536430271,
      "compression_ratio": 2.0173410404624277,
      "no_speech_prob": 0.002026466652750969
    },
    {
      "id": 42,
      "seek": 18936,
      "start": 211.10000000000002,
      "end": 217.12,
      "text": " So we just divide the earnings per share with the last price.",
      "tokens": [
        51451,
        407,
        321,
        445,
        9845,
        264,
        20548,
        680,
        2073,
        365,
        264,
        1036,
        3218,
        13,
        51752
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09057746536430271,
      "compression_ratio": 2.0173410404624277,
      "no_speech_prob": 0.002026466652750969
    },
    {
      "id": 43,
      "seek": 21712,
      "start": 217.12,
      "end": 223.72,
      "text": " So with that, we have all the data for the 500 constituents of the S&P 500.",
      "tokens": [
        50364,
        407,
        365,
        300,
        11,
        321,
        362,
        439,
        264,
        1412,
        337,
        264,
        5923,
        30847,
        295,
        264,
        318,
        5,
        47,
        5923,
        13,
        50694
      ],
      "temperature": 0.0,
      "avg_logprob": -0.15098356207211813,
      "compression_ratio": 1.5856573705179282,
      "no_speech_prob": 0.07184179872274399
    },
    {
      "id": 44,
      "seek": 21712,
      "start": 223.72,
      "end": 229.04,
      "text": " With this methodology, you can basically also retrieve other data points from Bloomberg,",
      "tokens": [
        50694,
        2022,
        341,
        24850,
        11,
        291,
        393,
        1936,
        611,
        30254,
        661,
        1412,
        2793,
        490,
        40363,
        11,
        50960
      ],
      "temperature": 0.0,
      "avg_logprob": -0.15098356207211813,
      "compression_ratio": 1.5856573705179282,
      "no_speech_prob": 0.07184179872274399
    },
    {
      "id": 45,
      "seek": 21712,
      "start": 229.04,
      "end": 231.6,
      "text": " really simple through the spreadsheet builder.",
      "tokens": [
        50960,
        534,
        2199,
        807,
        264,
        27733,
        27377,
        13,
        51088
      ],
      "temperature": 0.0,
      "avg_logprob": -0.15098356207211813,
      "compression_ratio": 1.5856573705179282,
      "no_speech_prob": 0.07184179872274399
    },
    {
      "id": 46,
      "seek": 21712,
      "start": 231.6,
      "end": 237.88,
      "text": " I hope this answered the question of the comment and I hope you all got some value out of it.",
      "tokens": [
        51088,
        286,
        1454,
        341,
        10103,
        264,
        1168,
        295,
        264,
        2871,
        293,
        286,
        1454,
        291,
        439,
        658,
        512,
        2158,
        484,
        295,
        309,
        13,
        51402
      ],
      "temperature": 0.0,
      "avg_logprob": -0.15098356207211813,
      "compression_ratio": 1.5856573705179282,
      "no_speech_prob": 0.07184179872274399
    },
    {
      "id": 47,
      "seek": 21712,
      "start": 237.88,
      "end": 241.52,
      "text": " Please subscribe for more content on how to use Bloomberg.",
      "tokens": [
        51402,
        2555,
        3022,
        337,
        544,
        2701,
        322,
        577,
        281,
        764,
        40363,
        13,
        51584
      ],
      "temperature": 0.0,
      "avg_logprob": -0.15098356207211813,
      "compression_ratio": 1.5856573705179282,
      "no_speech_prob": 0.07184179872274399
    },
    {
      "id": 48,
      "seek": 21712,
      "start": 241.52,
      "end": 243.68,
      "text": " Thanks a lot and have a nice day.",
      "tokens": [
        51584,
        2561,
        257,
        688,
        293,
        362,
        257,
        1481,
        786,
        13,
        51692
      ],
      "temperature": 0.0,
      "avg_logprob": -0.15098356207211813,
      "compression_ratio": 1.5856573705179282,
      "no_speech_prob": 0.07184179872274399
    }
  ],
  "processing_metadata": {
    "processed_at": "2025-06-26T02:46:29.173329",
    "whisper_model": "small",
    "personality_detected": "bloomy",
    "domain_focus": "finance_excel"
  },
  "source_metadata": {
    "url": "https://www.youtube.com/watch?v=9eQwqtfjdgM",
    "title": "Excel Dynamic Arrays",
    "category": "Excel Advanced",
    "difficulty": "advanced",
    "key_topics": [
      "Excel",
      "dynamic arrays",
      "365",
      "formulas"
    ],
    "priority": "medium"
  }
}