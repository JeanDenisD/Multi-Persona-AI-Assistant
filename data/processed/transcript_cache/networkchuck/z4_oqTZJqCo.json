{
  "video_id": "z4_oqTZJqCo",
  "video_url": "https://www.youtube.com/watch?v=z4_oqTZJqCo",
  "video_info": {
    "title": "how to HACK a password // password cracking with Kali Linux and HashCat",
    "uploader": "NetworkChuck",
    "channel": "NetworkChuck",
    "duration": 777,
    "upload_date": "20200821",
    "view_count": 7366679,
    "description": "learn how to hack passwords with Hydra, Hashcat and other tools:  (30% OFF): https://bit.ly/itprotvnetchuck or use code \"networkchuck\" (affiliate link) \n\nPassword Hacking Challenge: https://networkchuck.com/passwordhacking/\n\n**This video and my entire CEHv10 journey is sponsored by ITProTV\n\nwatch the entire series: https://bit.ly/cehseries\n\n***********THIS VIDEO IS DEMONETIZED....because i talk about hacking...consider supporting the mission: üëäüëäüëäJOIN MY MISSION:  https://bit.ly/thisisitio (thisisIT membership)\n\n‚òïBUY NETWORKCHUCK COFFEE: https://NetworkChuck.coffee ‚òï\n\n\n(affiliate links below)\n\nüî•MY CEH STUDY TOOLSüî•\n\nüì∫Video: ITProTV (https://bit.ly/itprotvnetchuck)\nüìöBook:  \nhttps://geni.us/UWAZ1i4 (Amazon)\nhttp://bit.ly/2FsyqWo (O'Reilly, 10 day FREE TRIAL)\nüî¨Lab: ITProTV Labs (https://bit.ly/itprotvnetchuck)\n\n0:00   ‚è©  Intro\n1:22   ‚è©  Brute-Force password hacking\n2:22   ‚è©  hacking with Hydra\n4:39   ‚è©  what is Password HASHING?\n7:31   ‚è©  HashCat Hacking\n11:11 ‚è©  the CHALLENGE!!\n\n\n#passwordhacking #ceh #ethicalhacking",
    "tags": [
      "kali linux",
      "how to",
      "password cracking",
      "ethical hacking",
      "hash identifier",
      "hashcat kali linux",
      "kali linux for beginners 2020",
      "kali linux install",
      "kali linux 2020.3",
      "hydra",
      "hashcat tutorial",
      "password hacking",
      "password hacking kali",
      "windows password hacking",
      "what is hashing",
      "password hash"
    ]
  },
  "personality": "networkchuck",
  "domain": "technology_networking",
  "expertise_areas": [
    "networking",
    "cybersecurity",
    "linux",
    "cloud",
    "vpn",
    "docker",
    "kubernetes"
  ],
  "language": "en",
  "text": " Password hacking. In this video, I'm going to show you how to hack into a server by cracking its password. And this is real world. You'll get a chance to do this yourself on my server. Also, this is for educational purposes only. Please don't go hack somebody else without the permission. Only hack me. You need to learn, learn, learn hacking. Okay, the goal here is to hack into this server, the coffee server. Why? Well, because once we do, we get free coffee. Coffee's awesome. Although you might need coffee for this, so go ahead and get it. Now, the good news is that we already have a username. The username is Dwight.shrute, which is a great start. But what we don't have is the password. This is our mission. We're going to password. And when I say hack, I also mean crack. Oh, and by the way, this is a real server that I want you to try and break into. Watch until the end. I've got a challenge and the first five people to complete that challenge will win free coffee. Legit. All right, here we go. I want also a huge shout out to IT Pro TV, the sponsor of this video and my hacking journey. They're my primary learning source for learning things like this. So if you want to dive deeper, check it out. Link below. If you use my code network, Chuck, you get 30% off forever. So yeah. So how do we hack this password? How do we crack it? Well, we can do it the old fashioned way, right? The good old Dwight Shrut method. Try 0000000. No, okay. Now try 00000001. SSH Dwight.shrute at my host. And I just start trying passwords 000001. No, let's try it again. 00002. No, that's not right. Let's try it again. 00003. Oh, let's try it again. No, why would you keep doing that? There are better ways and we can even automate this process to make it killer. Check this out. So what we were just doing is traditionally called a brute force attack. We were going to sit there and try every password under the sun until we found out Dwight's password, even if it took us five years, not the most efficient use of our time. Now to be fair, every attack I'm going to show you is technically a brute force attack, but we refer to them in different ways, but there are so many better ways and we're going to open up some hacking tools right now and they're amazing. Check this out. The first tool I want to show you is called Hydra. So fire up Kali Linux, launch a terminal and we'll get going. We're going to use Hydra for an online attack, which basically means we're going to be trying our passwords on a live system. We'll be entering those passwords in the prompt and getting denied as we keep trying them. Now Hydra is going to do all the workforce. We'll enter our command then step away and done, but she's not going to do what we just saw. Just trying every password under the sun 00001, 00002. No, no, no, no. We're going to give her a list, a list of passwords that we think might be it. What we're doing here, providing Hydra with a list of passwords is called a dictionary attack. And this is crazy effective because it has a list of common passwords that a lot of people might use. And we have a lot of passwords at our disposal. One list we have that's already built into Kali Linux is called the Iraq U password list. This company Iraq U got hacked back in 2009 and these hackers released all their passwords they found, which were stored in plain text. So now we get to use it. And this list is massive. Let's take a look right now. If I open another terminal here, if you're on Kali, you can find it in user share, word lists. And there it is right there, rock you dot txt dot gz. And we'll just unzip that real quick. pseudo G zip dash D the file name rock you dot txt dot GZ. And let's take a look at it. I'll cut the file right now. Look at that. So many passwords. I better stop it before my computer has a heart attack. There we go. Now I will not be using that list. That list has 14 million passwords. But I do have my own list. Here is my word list. Things I think Dwight might use. So let's try it out. First, I'll specify my username. Now I could do dash uppercase l to specify a file name like user names dot txt. And look through a list of names. Now I already know it's Dwight. So I can just do a lowercase l and put in Dwight dot shroot. And then I'll specify my password file do dash uppercase p and my file which I have named word list dot txt. I'll do a backslash to move to the next line here. And then my host which is 45 dots blah blah blah. And then the service type. Right now I'm accessing the server using SSH. So I'll specify SSH. It could be FTP. It could be telnet whatever. And let's go. Oh, password. It's all about passwords. Bam. You see how fast that was? I mean the list wasn't big, right? But it found it. Check it out. Here's the password. Bears beats. And with through my list tried each one. This is the one. Now this method is fun and useful. But let me tell you, if you're trying a bunch of login attempts, a bunch of passwords, firewalls might find you. You might get blocked. Plus you have timeouts. The account probably will get locked out. Not the best method. But we have another way, a better way. Check this out. Let's take our password hacking from online to offline. In this situation, we're not going to try and log into the server a million times. But how does that work? How do we know if it's going to be the right password? If we can't actually try it. One word. Hashing. What is that? Let's talk about it. You see, when Mr. Dwight Schrute created his password, Bears beats. The server will take this password and store it in its database. So that when Dwight logs in, they can go, oh, that is Dwight's password. Come on in Dwight. But they don't store it like this in plain text. Like you won't log in and see Bears beats. It won't be there. Actually, let me show you what it looks like right now. On that server, it'll look like this. This right here is Dwight's password. This crazy mess of numbers and letters is called a hash. So when Dwight created this password, Bears beats, the coffee server hashed it. Basically put it in his mouth, chewed it up, and spit it out. Looks like this now. Now it's a lot more complex than just chewing it up and spitting it out. For the server to turn Bears beats into this, it uses these crazy hashing algorithms, which without getting two in the weeds on it, is just a crazy math problem function, turning it into this. You might already be familiar with some of the hashing algorithms out there. Popular ones are MD5, SHA256, you got NTLM on Windows. And if we were to somehow hack into the server via other means and get a list of all the username and passwords that look like this, it would do us zero good, no good at all. When Dwight logs in, and he put this password in, Bears beats, the server takes this password, chews it up, spits it out, or in this case, runs it through its MD5 algorithm. And if the hash matches the hash stored in its database, you can go in, you're good. This should be how most websites and services out there are storing your passwords, not in plain text, like the RockU server. No, no, it's hashed. So if they do get hacked and hackers get that list of usernames and passwords, they don't have your password yet. Here's what we can do. We may not have Dwight's password. But if we have his hash, if we somehow got that information, we can do some offline password cracking to figure out what it is. Now again, we can't reverse engineer it, but we can brute force our way into it. We're going to do what we did before. We're going to take our word list, and we're going to try and use each of these passwords. But instead of trying to log into the server, we're going to run that hashing algorithm. We're going to chew it up and spit it out. We're going to run that MD5 algorithm and see if it matches the hash we have for Dwight's route. So we'll take the first password, salesman of the year three, run it through. It looks like this, doesn't match. We move on. We try password 123. And we get this, not a match. We move on and we keep going until we find a hash that matches. And we'll try bears beats and boom, this one does match a plus. Let's go. We got the password. Let's hack into the system. Let's do this right now. Okay, here in Cali, we're going to try out a tool called hash cat. For this tool, we're going to use two things. First, our word list, our list of possible passwords and two, we'll need our file of hashes. Let's go ahead and create this real quick. Linux will store its hash passwords in the shadow file. So I'll grab that right now. I'll just create that file, paste all that stuff in there. Save that. Now let's crack a password. The command will be pseudo hash cats. Now real quick, hash cats pretty crazy. You can do a lot of stuff. I'm going to show you the basics real quick. First, we'll start with the method, which we'll specify with dash a. Let's go to the manual page of our hash cat real quick. So open up another terminal window and go to man and hash cats. A lot of stuff going on. Let me scroll through to where I'm talking about. So we used dash a and here are the options. And if I talked about every one of these options, this video would be like four hours long. So I'm only going to talk about option zero, the straight option, which is just going through a word list and doing what we just talked about. These other options, which I would ignore brute force, but combination hybrid word list and mask, hybrid mask with word list, it's some crazy stuff. It's not just going through a word list, but it's auto generating these crazy password list and these password combinations and what password characters you can use. It can be intense and perhaps as a video for another time. For now, we're going to talk about just a straight dictionary attack option zero. So we'll put in zero. Now next is our hashing type. We'll put in dash M to specify that. Let's go back to our man page. Here we have our hashing types and there's a lot, a lot of hashing types. And it's going to be based on what type of password you're trying to hack. For example, if you know you're going to be hacking Cisco, look at that, you'll enter the code 5700 in that option for a plain Jane MD5, it'll be zero 1000 for NTLM, which if you're hacking Windows based passwords, that's what you'll use. And for our example, we're going to be using 1800 for Shaw 512 UNIX passwords. So we'll put in 1800. I'm also going to throw in a dash lowercase o and specify a file name, crack passwords.txt. This is where it's going to store the information we find out. And then finally, the two files we're going to be using the first will be our hashes, which we named hashes.txt. And then our word list we're going to use, which was word list.txt. And that's all we need. Hash cats about to spit some words out. Let's do it. Here we go. And that gum that was fast. Now again, the word list was not that big. And it found the password if you look here at candidates dot number one, it gave us two options. M&M and bears beats. Now we know that bears beats is the correct password. So great job. Hascat. Now let's try one more let's try a Windows based password. I'll do pseudo hash cats. Once more do a dash a specify not dash one dash a specify my method which will be zero dash m. This time I'm doing NTLM for Microsoft Windows. I know this to be 1000 as the code by looking at the manual page. I'll do a dash lowercase o for cracked passwords dot txt where I'm going to store my stuff and then my hash now I could specify a file. This time I'm going to specify the hash. It's going to copy that in there. So I'll just put that in quotes. So I got the one hash I'm looking for and then I'll put my word list in right here. Word list txt and go. Now it's a bit wonky because it says the candidates right now are bears beats which I know is not the password. But if we go to the top here, it says the session status cracked. It said it did it with this hash. Let's go look in that file we put that in. So I'll pseudo cats, crack passwords at txt. Let's take a look inside there. There it is. Okay, perfect. There's the hash I used. And there's the password from our word list that we matched up. And that was indeed the password. So now I have a challenge for you. I want you to use the skills you just learned in this video to hack or crack my server's passwords. The first five people to do this will win coffee. So link below. Good luck. And if you don't win, that's fine. I'll keep this challenge up for probably a week or maybe two weeks. And I would love for you to let me know below what you think about it. And again, it's using the skills we just talked about here in this video. I'm going to have you crack a password via the online method using a word list using Hydra, bam, bam, bam automation. And then I'm going to have you crack an offline password using a word list, a hash, a password hash, using hash cat. Now there's a lot more to password hacking or cracking. I just scratched the surface here, but I wanted to get you started. Hash cat is a crazy program that you can use to do some crazy stuff. If you have something like a beastly gaming PC like this boy behind me with the crazy CPU and a crazy GPU, you can do some serious password cracking, going through massive word lists. I'm talking millions and millions of passwords in these lists. Anyways, guys, that's about it. Password hacking, password cracking, whatever you want to call it. It's a powerful tool. And again, please do not use this in any way that's illegal, which let me be very clear. Unless you have someone's explicit permission to do this, it's illegal. Hack yourself, hack your own passwords, hack me. I'm giving you permission to hack my, just the one server, nothing else in my challenge. Otherwise, set up your own lab and do it in there. Do not use this for any illegal methods. But beyond that, I hope you like this video. If you do like it, like it. And if you haven't already hit that subscribe button. If you like what I'm doing here, yep, that's about it. I'll catch you guys later.",
  "segments": [
    {
      "id": 0,
      "seek": 0,
      "start": 0.0,
      "end": 5.28,
      "text": " Password hacking. In this video, I'm going to show you how to hack into a server by cracking its password.",
      "tokens": [
        50364,
        10319,
        7462,
        31422,
        13,
        682,
        341,
        960,
        11,
        286,
        478,
        516,
        281,
        855,
        291,
        577,
        281,
        10339,
        666,
        257,
        7154,
        538,
        25229,
        1080,
        11524,
        13,
        50628
      ],
      "temperature": 0.0,
      "avg_logprob": -0.2138077382291301,
      "compression_ratio": 1.6103286384976525,
      "no_speech_prob": 0.05201487988233566
    },
    {
      "id": 1,
      "seek": 0,
      "start": 5.28,
      "end": 8.96,
      "text": " And this is real world. You'll get a chance to do this yourself on my server.",
      "tokens": [
        50628,
        400,
        341,
        307,
        957,
        1002,
        13,
        509,
        603,
        483,
        257,
        2931,
        281,
        360,
        341,
        1803,
        322,
        452,
        7154,
        13,
        50812
      ],
      "temperature": 0.0,
      "avg_logprob": -0.2138077382291301,
      "compression_ratio": 1.6103286384976525,
      "no_speech_prob": 0.05201487988233566
    },
    {
      "id": 2,
      "seek": 0,
      "start": 8.96,
      "end": 13.68,
      "text": " Also, this is for educational purposes only. Please don't go hack somebody else without the permission.",
      "tokens": [
        50812,
        2743,
        11,
        341,
        307,
        337,
        10189,
        9932,
        787,
        13,
        2555,
        500,
        380,
        352,
        10339,
        2618,
        1646,
        1553,
        264,
        11226,
        13,
        51048
      ],
      "temperature": 0.0,
      "avg_logprob": -0.2138077382291301,
      "compression_ratio": 1.6103286384976525,
      "no_speech_prob": 0.05201487988233566
    },
    {
      "id": 3,
      "seek": 0,
      "start": 13.68,
      "end": 14.72,
      "text": " Only hack me.",
      "tokens": [
        51048,
        5686,
        10339,
        385,
        13,
        51100
      ],
      "temperature": 0.0,
      "avg_logprob": -0.2138077382291301,
      "compression_ratio": 1.6103286384976525,
      "no_speech_prob": 0.05201487988233566
    },
    {
      "id": 4,
      "seek": 0,
      "start": 14.72,
      "end": 16.96,
      "text": " You need to learn, learn, learn hacking.",
      "tokens": [
        51100,
        509,
        643,
        281,
        1466,
        11,
        1466,
        11,
        1466,
        31422,
        13,
        51212
      ],
      "temperature": 0.0,
      "avg_logprob": -0.2138077382291301,
      "compression_ratio": 1.6103286384976525,
      "no_speech_prob": 0.05201487988233566
    },
    {
      "id": 5,
      "seek": 3000,
      "start": 30.72,
      "end": 40.08,
      "text": " Okay, the goal here is to hack into this server, the coffee server. Why? Well, because once we do,",
      "tokens": [
        50400,
        1033,
        11,
        264,
        3387,
        510,
        307,
        281,
        10339,
        666,
        341,
        7154,
        11,
        264,
        4982,
        7154,
        13,
        1545,
        30,
        1042,
        11,
        570,
        1564,
        321,
        360,
        11,
        50868
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1879480308461412,
      "compression_ratio": 1.6260504201680672,
      "no_speech_prob": 0.004229767248034477
    },
    {
      "id": 6,
      "seek": 3000,
      "start": 40.64,
      "end": 44.56,
      "text": " we get free coffee. Coffee's awesome. Although you might need coffee for this, so go ahead and get it.",
      "tokens": [
        50896,
        321,
        483,
        1737,
        4982,
        13,
        25481,
        311,
        3476,
        13,
        5780,
        291,
        1062,
        643,
        4982,
        337,
        341,
        11,
        370,
        352,
        2286,
        293,
        483,
        309,
        13,
        51092
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1879480308461412,
      "compression_ratio": 1.6260504201680672,
      "no_speech_prob": 0.004229767248034477
    },
    {
      "id": 7,
      "seek": 3000,
      "start": 44.56,
      "end": 49.519999999999996,
      "text": " Now, the good news is that we already have a username. The username is Dwight.shrute,",
      "tokens": [
        51092,
        823,
        11,
        264,
        665,
        2583,
        307,
        300,
        321,
        1217,
        362,
        257,
        30351,
        13,
        440,
        30351,
        307,
        41448,
        397,
        13,
        82,
        1703,
        1169,
        11,
        51340
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1879480308461412,
      "compression_ratio": 1.6260504201680672,
      "no_speech_prob": 0.004229767248034477
    },
    {
      "id": 8,
      "seek": 3000,
      "start": 49.519999999999996,
      "end": 54.879999999999995,
      "text": " which is a great start. But what we don't have is the password. This is our mission. We're going to",
      "tokens": [
        51340,
        597,
        307,
        257,
        869,
        722,
        13,
        583,
        437,
        321,
        500,
        380,
        362,
        307,
        264,
        11524,
        13,
        639,
        307,
        527,
        4447,
        13,
        492,
        434,
        516,
        281,
        51608
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1879480308461412,
      "compression_ratio": 1.6260504201680672,
      "no_speech_prob": 0.004229767248034477
    },
    {
      "id": 9,
      "seek": 5488,
      "start": 55.6,
      "end": 60.88,
      "text": " password. And when I say hack, I also mean crack. Oh, and by the way, this is a real server that I",
      "tokens": [
        50400,
        11524,
        13,
        400,
        562,
        286,
        584,
        10339,
        11,
        286,
        611,
        914,
        6226,
        13,
        876,
        11,
        293,
        538,
        264,
        636,
        11,
        341,
        307,
        257,
        957,
        7154,
        300,
        286,
        50664
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1283929093078997,
      "compression_ratio": 1.643646408839779,
      "no_speech_prob": 0.08972251415252686
    },
    {
      "id": 10,
      "seek": 5488,
      "start": 60.88,
      "end": 64.4,
      "text": " want you to try and break into. Watch until the end. I've got a challenge and the first five people",
      "tokens": [
        50664,
        528,
        291,
        281,
        853,
        293,
        1821,
        666,
        13,
        7277,
        1826,
        264,
        917,
        13,
        286,
        600,
        658,
        257,
        3430,
        293,
        264,
        700,
        1732,
        561,
        50840
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1283929093078997,
      "compression_ratio": 1.643646408839779,
      "no_speech_prob": 0.08972251415252686
    },
    {
      "id": 11,
      "seek": 5488,
      "start": 64.4,
      "end": 68.48,
      "text": " to complete that challenge will win free coffee. Legit. All right, here we go. I want also a huge",
      "tokens": [
        50840,
        281,
        3566,
        300,
        3430,
        486,
        1942,
        1737,
        4982,
        13,
        7470,
        270,
        13,
        1057,
        558,
        11,
        510,
        321,
        352,
        13,
        286,
        528,
        611,
        257,
        2603,
        51044
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1283929093078997,
      "compression_ratio": 1.643646408839779,
      "no_speech_prob": 0.08972251415252686
    },
    {
      "id": 12,
      "seek": 5488,
      "start": 68.48,
      "end": 73.2,
      "text": " shout out to IT Pro TV, the sponsor of this video and my hacking journey. They're my primary learning",
      "tokens": [
        51044,
        8043,
        484,
        281,
        6783,
        1705,
        3558,
        11,
        264,
        16198,
        295,
        341,
        960,
        293,
        452,
        31422,
        4671,
        13,
        814,
        434,
        452,
        6194,
        2539,
        51280
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1283929093078997,
      "compression_ratio": 1.643646408839779,
      "no_speech_prob": 0.08972251415252686
    },
    {
      "id": 13,
      "seek": 5488,
      "start": 73.2,
      "end": 77.36,
      "text": " source for learning things like this. So if you want to dive deeper, check it out. Link below. If",
      "tokens": [
        51280,
        4009,
        337,
        2539,
        721,
        411,
        341,
        13,
        407,
        498,
        291,
        528,
        281,
        9192,
        7731,
        11,
        1520,
        309,
        484,
        13,
        8466,
        2507,
        13,
        759,
        51488
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1283929093078997,
      "compression_ratio": 1.643646408839779,
      "no_speech_prob": 0.08972251415252686
    },
    {
      "id": 14,
      "seek": 5488,
      "start": 77.36,
      "end": 82.72,
      "text": " you use my code network, Chuck, you get 30% off forever. So yeah. So how do we hack this password?",
      "tokens": [
        51488,
        291,
        764,
        452,
        3089,
        3209,
        11,
        21607,
        11,
        291,
        483,
        2217,
        4,
        766,
        5680,
        13,
        407,
        1338,
        13,
        407,
        577,
        360,
        321,
        10339,
        341,
        11524,
        30,
        51756
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1283929093078997,
      "compression_ratio": 1.643646408839779,
      "no_speech_prob": 0.08972251415252686
    },
    {
      "id": 15,
      "seek": 8272,
      "start": 82.72,
      "end": 86.0,
      "text": " How do we crack it? Well, we can do it the old fashioned way, right? The good old Dwight Shrut",
      "tokens": [
        50364,
        1012,
        360,
        321,
        6226,
        309,
        30,
        1042,
        11,
        321,
        393,
        360,
        309,
        264,
        1331,
        40646,
        636,
        11,
        558,
        30,
        440,
        665,
        1331,
        41448,
        397,
        1160,
        24316,
        50528
      ],
      "temperature": 0.0,
      "avg_logprob": -0.20596710359207307,
      "compression_ratio": 1.565217391304348,
      "no_speech_prob": 0.03523649275302887
    },
    {
      "id": 16,
      "seek": 8272,
      "start": 86.0,
      "end": 100.4,
      "text": " method. Try 0000000. No, okay. Now try 00000001. SSH Dwight.shrute at my host. And I just start",
      "tokens": [
        50528,
        3170,
        13,
        6526,
        7143,
        628,
        1360,
        13,
        883,
        11,
        1392,
        13,
        823,
        853,
        7143,
        628,
        1360,
        16,
        13,
        12238,
        39,
        41448,
        397,
        13,
        82,
        1703,
        1169,
        412,
        452,
        3975,
        13,
        400,
        286,
        445,
        722,
        51248
      ],
      "temperature": 0.0,
      "avg_logprob": -0.20596710359207307,
      "compression_ratio": 1.565217391304348,
      "no_speech_prob": 0.03523649275302887
    },
    {
      "id": 17,
      "seek": 8272,
      "start": 100.4,
      "end": 107.84,
      "text": " trying passwords 000001. No, let's try it again. 00002. No, that's not right. Let's try it again.",
      "tokens": [
        51248,
        1382,
        33149,
        7143,
        1360,
        16,
        13,
        883,
        11,
        718,
        311,
        853,
        309,
        797,
        13,
        7143,
        628,
        17,
        13,
        883,
        11,
        300,
        311,
        406,
        558,
        13,
        961,
        311,
        853,
        309,
        797,
        13,
        51620
      ],
      "temperature": 0.0,
      "avg_logprob": -0.20596710359207307,
      "compression_ratio": 1.565217391304348,
      "no_speech_prob": 0.03523649275302887
    },
    {
      "id": 18,
      "seek": 10784,
      "start": 107.84,
      "end": 114.24000000000001,
      "text": " 00003. Oh, let's try it again. No, why would you keep doing that? There are better ways and we can",
      "tokens": [
        50364,
        7143,
        628,
        18,
        13,
        876,
        11,
        718,
        311,
        853,
        309,
        797,
        13,
        883,
        11,
        983,
        576,
        291,
        1066,
        884,
        300,
        30,
        821,
        366,
        1101,
        2098,
        293,
        321,
        393,
        50684
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08137523255697111,
      "compression_ratio": 1.7642276422764227,
      "no_speech_prob": 0.030936993658542633
    },
    {
      "id": 19,
      "seek": 10784,
      "start": 114.24000000000001,
      "end": 117.84,
      "text": " even automate this process to make it killer. Check this out. So what we were just doing is",
      "tokens": [
        50684,
        754,
        31605,
        341,
        1399,
        281,
        652,
        309,
        13364,
        13,
        6881,
        341,
        484,
        13,
        407,
        437,
        321,
        645,
        445,
        884,
        307,
        50864
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08137523255697111,
      "compression_ratio": 1.7642276422764227,
      "no_speech_prob": 0.030936993658542633
    },
    {
      "id": 20,
      "seek": 10784,
      "start": 117.84,
      "end": 121.76,
      "text": " traditionally called a brute force attack. We were going to sit there and try every password",
      "tokens": [
        50864,
        19067,
        1219,
        257,
        47909,
        3464,
        2690,
        13,
        492,
        645,
        516,
        281,
        1394,
        456,
        293,
        853,
        633,
        11524,
        51060
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08137523255697111,
      "compression_ratio": 1.7642276422764227,
      "no_speech_prob": 0.030936993658542633
    },
    {
      "id": 21,
      "seek": 10784,
      "start": 121.76,
      "end": 125.52000000000001,
      "text": " under the sun until we found out Dwight's password, even if it took us five years,",
      "tokens": [
        51060,
        833,
        264,
        3295,
        1826,
        321,
        1352,
        484,
        41448,
        397,
        311,
        11524,
        11,
        754,
        498,
        309,
        1890,
        505,
        1732,
        924,
        11,
        51248
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08137523255697111,
      "compression_ratio": 1.7642276422764227,
      "no_speech_prob": 0.030936993658542633
    },
    {
      "id": 22,
      "seek": 10784,
      "start": 125.52000000000001,
      "end": 129.92000000000002,
      "text": " not the most efficient use of our time. Now to be fair, every attack I'm going to show you is",
      "tokens": [
        51248,
        406,
        264,
        881,
        7148,
        764,
        295,
        527,
        565,
        13,
        823,
        281,
        312,
        3143,
        11,
        633,
        2690,
        286,
        478,
        516,
        281,
        855,
        291,
        307,
        51468
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08137523255697111,
      "compression_ratio": 1.7642276422764227,
      "no_speech_prob": 0.030936993658542633
    },
    {
      "id": 23,
      "seek": 10784,
      "start": 129.92000000000002,
      "end": 134.0,
      "text": " technically a brute force attack, but we refer to them in different ways, but there are so many",
      "tokens": [
        51468,
        12120,
        257,
        47909,
        3464,
        2690,
        11,
        457,
        321,
        2864,
        281,
        552,
        294,
        819,
        2098,
        11,
        457,
        456,
        366,
        370,
        867,
        51672
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08137523255697111,
      "compression_ratio": 1.7642276422764227,
      "no_speech_prob": 0.030936993658542633
    },
    {
      "id": 24,
      "seek": 10784,
      "start": 134.0,
      "end": 137.12,
      "text": " better ways and we're going to open up some hacking tools right now and they're amazing. Check",
      "tokens": [
        51672,
        1101,
        2098,
        293,
        321,
        434,
        516,
        281,
        1269,
        493,
        512,
        31422,
        3873,
        558,
        586,
        293,
        436,
        434,
        2243,
        13,
        6881,
        51828
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08137523255697111,
      "compression_ratio": 1.7642276422764227,
      "no_speech_prob": 0.030936993658542633
    },
    {
      "id": 25,
      "seek": 13712,
      "start": 137.20000000000002,
      "end": 141.28,
      "text": " this out. The first tool I want to show you is called Hydra. So fire up Kali Linux, launch a",
      "tokens": [
        50368,
        341,
        484,
        13,
        440,
        700,
        2290,
        286,
        528,
        281,
        855,
        291,
        307,
        1219,
        24231,
        424,
        13,
        407,
        2610,
        493,
        591,
        5103,
        18734,
        11,
        4025,
        257,
        50572
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08937237534341932,
      "compression_ratio": 1.7652439024390243,
      "no_speech_prob": 0.004228000994771719
    },
    {
      "id": 26,
      "seek": 13712,
      "start": 141.28,
      "end": 145.68,
      "text": " terminal and we'll get going. We're going to use Hydra for an online attack, which basically means",
      "tokens": [
        50572,
        14709,
        293,
        321,
        603,
        483,
        516,
        13,
        492,
        434,
        516,
        281,
        764,
        24231,
        424,
        337,
        364,
        2950,
        2690,
        11,
        597,
        1936,
        1355,
        50792
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08937237534341932,
      "compression_ratio": 1.7652439024390243,
      "no_speech_prob": 0.004228000994771719
    },
    {
      "id": 27,
      "seek": 13712,
      "start": 145.68,
      "end": 149.68,
      "text": " we're going to be trying our passwords on a live system. We'll be entering those passwords in the",
      "tokens": [
        50792,
        321,
        434,
        516,
        281,
        312,
        1382,
        527,
        33149,
        322,
        257,
        1621,
        1185,
        13,
        492,
        603,
        312,
        11104,
        729,
        33149,
        294,
        264,
        50992
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08937237534341932,
      "compression_ratio": 1.7652439024390243,
      "no_speech_prob": 0.004228000994771719
    },
    {
      "id": 28,
      "seek": 13712,
      "start": 149.68,
      "end": 153.84,
      "text": " prompt and getting denied as we keep trying them. Now Hydra is going to do all the workforce. We'll",
      "tokens": [
        50992,
        12391,
        293,
        1242,
        17774,
        382,
        321,
        1066,
        1382,
        552,
        13,
        823,
        24231,
        424,
        307,
        516,
        281,
        360,
        439,
        264,
        14201,
        13,
        492,
        603,
        51200
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08937237534341932,
      "compression_ratio": 1.7652439024390243,
      "no_speech_prob": 0.004228000994771719
    },
    {
      "id": 29,
      "seek": 13712,
      "start": 153.84,
      "end": 157.52,
      "text": " enter our command then step away and done, but she's not going to do what we just saw. Just",
      "tokens": [
        51200,
        3242,
        527,
        5622,
        550,
        1823,
        1314,
        293,
        1096,
        11,
        457,
        750,
        311,
        406,
        516,
        281,
        360,
        437,
        321,
        445,
        1866,
        13,
        1449,
        51384
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08937237534341932,
      "compression_ratio": 1.7652439024390243,
      "no_speech_prob": 0.004228000994771719
    },
    {
      "id": 30,
      "seek": 13712,
      "start": 157.52,
      "end": 163.12,
      "text": " trying every password under the sun 00001, 00002. No, no, no, no. We're going to give her a list,",
      "tokens": [
        51384,
        1382,
        633,
        11524,
        833,
        264,
        3295,
        7143,
        628,
        16,
        11,
        7143,
        628,
        17,
        13,
        883,
        11,
        572,
        11,
        572,
        11,
        572,
        13,
        492,
        434,
        516,
        281,
        976,
        720,
        257,
        1329,
        11,
        51664
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08937237534341932,
      "compression_ratio": 1.7652439024390243,
      "no_speech_prob": 0.004228000994771719
    },
    {
      "id": 31,
      "seek": 16312,
      "start": 163.12,
      "end": 167.28,
      "text": " a list of passwords that we think might be it. What we're doing here, providing Hydra with a",
      "tokens": [
        50364,
        257,
        1329,
        295,
        33149,
        300,
        321,
        519,
        1062,
        312,
        309,
        13,
        708,
        321,
        434,
        884,
        510,
        11,
        6530,
        24231,
        424,
        365,
        257,
        50572
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10128102885733406,
      "compression_ratio": 1.8107255520504733,
      "no_speech_prob": 0.009528253227472305
    },
    {
      "id": 32,
      "seek": 16312,
      "start": 167.28,
      "end": 172.08,
      "text": " list of passwords is called a dictionary attack. And this is crazy effective because it has a",
      "tokens": [
        50572,
        1329,
        295,
        33149,
        307,
        1219,
        257,
        25890,
        2690,
        13,
        400,
        341,
        307,
        3219,
        4942,
        570,
        309,
        575,
        257,
        50812
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10128102885733406,
      "compression_ratio": 1.8107255520504733,
      "no_speech_prob": 0.009528253227472305
    },
    {
      "id": 33,
      "seek": 16312,
      "start": 172.08,
      "end": 176.24,
      "text": " list of common passwords that a lot of people might use. And we have a lot of passwords at our",
      "tokens": [
        50812,
        1329,
        295,
        2689,
        33149,
        300,
        257,
        688,
        295,
        561,
        1062,
        764,
        13,
        400,
        321,
        362,
        257,
        688,
        295,
        33149,
        412,
        527,
        51020
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10128102885733406,
      "compression_ratio": 1.8107255520504733,
      "no_speech_prob": 0.009528253227472305
    },
    {
      "id": 34,
      "seek": 16312,
      "start": 176.24,
      "end": 180.72,
      "text": " disposal. One list we have that's already built into Kali Linux is called the Iraq U password list.",
      "tokens": [
        51020,
        26400,
        13,
        1485,
        1329,
        321,
        362,
        300,
        311,
        1217,
        3094,
        666,
        591,
        5103,
        18734,
        307,
        1219,
        264,
        11818,
        624,
        11524,
        1329,
        13,
        51244
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10128102885733406,
      "compression_ratio": 1.8107255520504733,
      "no_speech_prob": 0.009528253227472305
    },
    {
      "id": 35,
      "seek": 16312,
      "start": 180.72,
      "end": 185.44,
      "text": " This company Iraq U got hacked back in 2009 and these hackers released all their passwords they",
      "tokens": [
        51244,
        639,
        2237,
        11818,
        624,
        658,
        36218,
        646,
        294,
        11453,
        293,
        613,
        39766,
        4736,
        439,
        641,
        33149,
        436,
        51480
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10128102885733406,
      "compression_ratio": 1.8107255520504733,
      "no_speech_prob": 0.009528253227472305
    },
    {
      "id": 36,
      "seek": 16312,
      "start": 185.44,
      "end": 189.52,
      "text": " found, which were stored in plain text. So now we get to use it. And this list is massive. Let's",
      "tokens": [
        51480,
        1352,
        11,
        597,
        645,
        12187,
        294,
        11121,
        2487,
        13,
        407,
        586,
        321,
        483,
        281,
        764,
        309,
        13,
        400,
        341,
        1329,
        307,
        5994,
        13,
        961,
        311,
        51684
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10128102885733406,
      "compression_ratio": 1.8107255520504733,
      "no_speech_prob": 0.009528253227472305
    },
    {
      "id": 37,
      "seek": 18952,
      "start": 189.52,
      "end": 193.12,
      "text": " take a look right now. If I open another terminal here, if you're on Kali, you can find it in",
      "tokens": [
        50364,
        747,
        257,
        574,
        558,
        586,
        13,
        759,
        286,
        1269,
        1071,
        14709,
        510,
        11,
        498,
        291,
        434,
        322,
        591,
        5103,
        11,
        291,
        393,
        915,
        309,
        294,
        50544
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1923527801245974,
      "compression_ratio": 1.658008658008658,
      "no_speech_prob": 0.019364917650818825
    },
    {
      "id": 38,
      "seek": 18952,
      "start": 193.12,
      "end": 199.12,
      "text": " user share, word lists. And there it is right there, rock you dot txt dot gz. And we'll just",
      "tokens": [
        50544,
        4195,
        2073,
        11,
        1349,
        14511,
        13,
        400,
        456,
        309,
        307,
        558,
        456,
        11,
        3727,
        291,
        5893,
        256,
        734,
        5893,
        290,
        89,
        13,
        400,
        321,
        603,
        445,
        50844
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1923527801245974,
      "compression_ratio": 1.658008658008658,
      "no_speech_prob": 0.019364917650818825
    },
    {
      "id": 39,
      "seek": 18952,
      "start": 199.12,
      "end": 206.32000000000002,
      "text": " unzip that real quick. pseudo G zip dash D the file name rock you dot txt dot GZ. And let's take",
      "tokens": [
        50844,
        517,
        27268,
        300,
        957,
        1702,
        13,
        35899,
        460,
        20730,
        8240,
        413,
        264,
        3991,
        1315,
        3727,
        291,
        5893,
        256,
        734,
        5893,
        460,
        57,
        13,
        400,
        718,
        311,
        747,
        51204
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1923527801245974,
      "compression_ratio": 1.658008658008658,
      "no_speech_prob": 0.019364917650818825
    },
    {
      "id": 40,
      "seek": 18952,
      "start": 206.32000000000002,
      "end": 215.20000000000002,
      "text": " a look at it. I'll cut the file right now. Look at that. So many passwords. I better stop it before",
      "tokens": [
        51204,
        257,
        574,
        412,
        309,
        13,
        286,
        603,
        1723,
        264,
        3991,
        558,
        586,
        13,
        2053,
        412,
        300,
        13,
        407,
        867,
        33149,
        13,
        286,
        1101,
        1590,
        309,
        949,
        51648
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1923527801245974,
      "compression_ratio": 1.658008658008658,
      "no_speech_prob": 0.019364917650818825
    },
    {
      "id": 41,
      "seek": 21520,
      "start": 215.28,
      "end": 220.23999999999998,
      "text": " my computer has a heart attack. There we go. Now I will not be using that list. That list has 14",
      "tokens": [
        50368,
        452,
        3820,
        575,
        257,
        1917,
        2690,
        13,
        821,
        321,
        352,
        13,
        823,
        286,
        486,
        406,
        312,
        1228,
        300,
        1329,
        13,
        663,
        1329,
        575,
        3499,
        50616
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11047934789727204,
      "compression_ratio": 1.696113074204947,
      "no_speech_prob": 0.01833721250295639
    },
    {
      "id": 42,
      "seek": 21520,
      "start": 220.23999999999998,
      "end": 226.56,
      "text": " million passwords. But I do have my own list. Here is my word list. Things I think Dwight might use.",
      "tokens": [
        50616,
        2459,
        33149,
        13,
        583,
        286,
        360,
        362,
        452,
        1065,
        1329,
        13,
        1692,
        307,
        452,
        1349,
        1329,
        13,
        9514,
        286,
        519,
        41448,
        397,
        1062,
        764,
        13,
        50932
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11047934789727204,
      "compression_ratio": 1.696113074204947,
      "no_speech_prob": 0.01833721250295639
    },
    {
      "id": 43,
      "seek": 21520,
      "start": 226.56,
      "end": 231.04,
      "text": " So let's try it out. First, I'll specify my username. Now I could do dash uppercase l to",
      "tokens": [
        50932,
        407,
        718,
        311,
        853,
        309,
        484,
        13,
        2386,
        11,
        286,
        603,
        16500,
        452,
        30351,
        13,
        823,
        286,
        727,
        360,
        8240,
        11775,
        2869,
        651,
        287,
        281,
        51156
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11047934789727204,
      "compression_ratio": 1.696113074204947,
      "no_speech_prob": 0.01833721250295639
    },
    {
      "id": 44,
      "seek": 21520,
      "start": 231.04,
      "end": 236.79999999999998,
      "text": " specify a file name like user names dot txt. And look through a list of names. Now I already know",
      "tokens": [
        51156,
        16500,
        257,
        3991,
        1315,
        411,
        4195,
        5288,
        5893,
        256,
        734,
        13,
        400,
        574,
        807,
        257,
        1329,
        295,
        5288,
        13,
        823,
        286,
        1217,
        458,
        51444
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11047934789727204,
      "compression_ratio": 1.696113074204947,
      "no_speech_prob": 0.01833721250295639
    },
    {
      "id": 45,
      "seek": 21520,
      "start": 236.79999999999998,
      "end": 242.39999999999998,
      "text": " it's Dwight. So I can just do a lowercase l and put in Dwight dot shroot. And then I'll specify",
      "tokens": [
        51444,
        309,
        311,
        41448,
        397,
        13,
        407,
        286,
        393,
        445,
        360,
        257,
        3126,
        9765,
        287,
        293,
        829,
        294,
        41448,
        397,
        5893,
        402,
        44147,
        13,
        400,
        550,
        286,
        603,
        16500,
        51724
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11047934789727204,
      "compression_ratio": 1.696113074204947,
      "no_speech_prob": 0.01833721250295639
    },
    {
      "id": 46,
      "seek": 24240,
      "start": 242.4,
      "end": 251.04000000000002,
      "text": " my password file do dash uppercase p and my file which I have named word list dot txt. I'll do a",
      "tokens": [
        50364,
        452,
        11524,
        3991,
        360,
        8240,
        11775,
        2869,
        651,
        280,
        293,
        452,
        3991,
        597,
        286,
        362,
        4926,
        1349,
        1329,
        5893,
        256,
        734,
        13,
        286,
        603,
        360,
        257,
        50796
      ],
      "temperature": 0.0,
      "avg_logprob": -0.13461617306546048,
      "compression_ratio": 1.6422413793103448,
      "no_speech_prob": 0.025038665160536766
    },
    {
      "id": 47,
      "seek": 24240,
      "start": 251.04000000000002,
      "end": 256.8,
      "text": " backslash to move to the next line here. And then my host which is 45 dots blah blah blah.",
      "tokens": [
        50796,
        646,
        10418,
        1299,
        281,
        1286,
        281,
        264,
        958,
        1622,
        510,
        13,
        400,
        550,
        452,
        3975,
        597,
        307,
        6905,
        15026,
        12288,
        12288,
        12288,
        13,
        51084
      ],
      "temperature": 0.0,
      "avg_logprob": -0.13461617306546048,
      "compression_ratio": 1.6422413793103448,
      "no_speech_prob": 0.025038665160536766
    },
    {
      "id": 48,
      "seek": 24240,
      "start": 256.8,
      "end": 261.6,
      "text": " And then the service type. Right now I'm accessing the server using SSH. So I'll specify SSH. It",
      "tokens": [
        51084,
        400,
        550,
        264,
        2643,
        2010,
        13,
        1779,
        586,
        286,
        478,
        26440,
        264,
        7154,
        1228,
        12238,
        39,
        13,
        407,
        286,
        603,
        16500,
        12238,
        39,
        13,
        467,
        51324
      ],
      "temperature": 0.0,
      "avg_logprob": -0.13461617306546048,
      "compression_ratio": 1.6422413793103448,
      "no_speech_prob": 0.025038665160536766
    },
    {
      "id": 49,
      "seek": 24240,
      "start": 261.6,
      "end": 269.6,
      "text": " could be FTP. It could be telnet whatever. And let's go. Oh, password. It's all about passwords.",
      "tokens": [
        51324,
        727,
        312,
        479,
        16804,
        13,
        467,
        727,
        312,
        15284,
        7129,
        2035,
        13,
        400,
        718,
        311,
        352,
        13,
        876,
        11,
        11524,
        13,
        467,
        311,
        439,
        466,
        33149,
        13,
        51724
      ],
      "temperature": 0.0,
      "avg_logprob": -0.13461617306546048,
      "compression_ratio": 1.6422413793103448,
      "no_speech_prob": 0.025038665160536766
    },
    {
      "id": 50,
      "seek": 26960,
      "start": 270.16,
      "end": 274.64000000000004,
      "text": " Bam. You see how fast that was? I mean the list wasn't big, right? But it found it. Check it out.",
      "tokens": [
        50392,
        26630,
        13,
        509,
        536,
        577,
        2370,
        300,
        390,
        30,
        286,
        914,
        264,
        1329,
        2067,
        380,
        955,
        11,
        558,
        30,
        583,
        309,
        1352,
        309,
        13,
        6881,
        309,
        484,
        13,
        50616
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10139245440246193,
      "compression_ratio": 1.7077363896848137,
      "no_speech_prob": 0.01214736420661211
    },
    {
      "id": 51,
      "seek": 26960,
      "start": 274.64000000000004,
      "end": 279.52000000000004,
      "text": " Here's the password. Bears beats. And with through my list tried each one. This is the one. Now this",
      "tokens": [
        50616,
        1692,
        311,
        264,
        11524,
        13,
        50180,
        16447,
        13,
        400,
        365,
        807,
        452,
        1329,
        3031,
        1184,
        472,
        13,
        639,
        307,
        264,
        472,
        13,
        823,
        341,
        50860
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10139245440246193,
      "compression_ratio": 1.7077363896848137,
      "no_speech_prob": 0.01214736420661211
    },
    {
      "id": 52,
      "seek": 26960,
      "start": 279.52000000000004,
      "end": 284.72,
      "text": " method is fun and useful. But let me tell you, if you're trying a bunch of login attempts, a bunch",
      "tokens": [
        50860,
        3170,
        307,
        1019,
        293,
        4420,
        13,
        583,
        718,
        385,
        980,
        291,
        11,
        498,
        291,
        434,
        1382,
        257,
        3840,
        295,
        24276,
        15257,
        11,
        257,
        3840,
        51120
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10139245440246193,
      "compression_ratio": 1.7077363896848137,
      "no_speech_prob": 0.01214736420661211
    },
    {
      "id": 53,
      "seek": 26960,
      "start": 284.72,
      "end": 289.12,
      "text": " of passwords, firewalls might find you. You might get blocked. Plus you have timeouts. The account",
      "tokens": [
        51120,
        295,
        33149,
        11,
        36109,
        82,
        1062,
        915,
        291,
        13,
        509,
        1062,
        483,
        15470,
        13,
        7721,
        291,
        362,
        565,
        7711,
        13,
        440,
        2696,
        51340
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10139245440246193,
      "compression_ratio": 1.7077363896848137,
      "no_speech_prob": 0.01214736420661211
    },
    {
      "id": 54,
      "seek": 26960,
      "start": 289.12,
      "end": 294.16,
      "text": " probably will get locked out. Not the best method. But we have another way, a better way. Check this",
      "tokens": [
        51340,
        1391,
        486,
        483,
        9376,
        484,
        13,
        1726,
        264,
        1151,
        3170,
        13,
        583,
        321,
        362,
        1071,
        636,
        11,
        257,
        1101,
        636,
        13,
        6881,
        341,
        51592
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10139245440246193,
      "compression_ratio": 1.7077363896848137,
      "no_speech_prob": 0.01214736420661211
    },
    {
      "id": 55,
      "seek": 26960,
      "start": 294.16,
      "end": 298.32000000000005,
      "text": " out. Let's take our password hacking from online to offline. In this situation, we're not going to",
      "tokens": [
        51592,
        484,
        13,
        961,
        311,
        747,
        527,
        11524,
        31422,
        490,
        2950,
        281,
        21857,
        13,
        682,
        341,
        2590,
        11,
        321,
        434,
        406,
        516,
        281,
        51800
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10139245440246193,
      "compression_ratio": 1.7077363896848137,
      "no_speech_prob": 0.01214736420661211
    },
    {
      "id": 56,
      "seek": 29832,
      "start": 298.4,
      "end": 302.96,
      "text": " try and log into the server a million times. But how does that work? How do we know if it's",
      "tokens": [
        50368,
        853,
        293,
        3565,
        666,
        264,
        7154,
        257,
        2459,
        1413,
        13,
        583,
        577,
        775,
        300,
        589,
        30,
        1012,
        360,
        321,
        458,
        498,
        309,
        311,
        50596
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11281910649052372,
      "compression_ratio": 1.78328173374613,
      "no_speech_prob": 0.007766521070152521
    },
    {
      "id": 57,
      "seek": 29832,
      "start": 302.96,
      "end": 309.36,
      "text": " going to be the right password? If we can't actually try it. One word. Hashing. What is that?",
      "tokens": [
        50596,
        516,
        281,
        312,
        264,
        558,
        11524,
        30,
        759,
        321,
        393,
        380,
        767,
        853,
        309,
        13,
        1485,
        1349,
        13,
        8646,
        571,
        13,
        708,
        307,
        300,
        30,
        50916
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11281910649052372,
      "compression_ratio": 1.78328173374613,
      "no_speech_prob": 0.007766521070152521
    },
    {
      "id": 58,
      "seek": 29832,
      "start": 309.36,
      "end": 313.52,
      "text": " Let's talk about it. You see, when Mr. Dwight Schrute created his password, Bears beats. The",
      "tokens": [
        50916,
        961,
        311,
        751,
        466,
        309,
        13,
        509,
        536,
        11,
        562,
        2221,
        13,
        41448,
        397,
        46191,
        1169,
        2942,
        702,
        11524,
        11,
        50180,
        16447,
        13,
        440,
        51124
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11281910649052372,
      "compression_ratio": 1.78328173374613,
      "no_speech_prob": 0.007766521070152521
    },
    {
      "id": 59,
      "seek": 29832,
      "start": 313.52,
      "end": 318.0,
      "text": " server will take this password and store it in its database. So that when Dwight logs in, they can go,",
      "tokens": [
        51124,
        7154,
        486,
        747,
        341,
        11524,
        293,
        3531,
        309,
        294,
        1080,
        8149,
        13,
        407,
        300,
        562,
        41448,
        397,
        20820,
        294,
        11,
        436,
        393,
        352,
        11,
        51348
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11281910649052372,
      "compression_ratio": 1.78328173374613,
      "no_speech_prob": 0.007766521070152521
    },
    {
      "id": 60,
      "seek": 29832,
      "start": 318.0,
      "end": 322.88,
      "text": " oh, that is Dwight's password. Come on in Dwight. But they don't store it like this in plain text.",
      "tokens": [
        51348,
        1954,
        11,
        300,
        307,
        41448,
        397,
        311,
        11524,
        13,
        2492,
        322,
        294,
        41448,
        397,
        13,
        583,
        436,
        500,
        380,
        3531,
        309,
        411,
        341,
        294,
        11121,
        2487,
        13,
        51592
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11281910649052372,
      "compression_ratio": 1.78328173374613,
      "no_speech_prob": 0.007766521070152521
    },
    {
      "id": 61,
      "seek": 29832,
      "start": 322.88,
      "end": 326.88,
      "text": " Like you won't log in and see Bears beats. It won't be there. Actually, let me show you what it",
      "tokens": [
        51592,
        1743,
        291,
        1582,
        380,
        3565,
        294,
        293,
        536,
        50180,
        16447,
        13,
        467,
        1582,
        380,
        312,
        456,
        13,
        5135,
        11,
        718,
        385,
        855,
        291,
        437,
        309,
        51792
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11281910649052372,
      "compression_ratio": 1.78328173374613,
      "no_speech_prob": 0.007766521070152521
    },
    {
      "id": 62,
      "seek": 32688,
      "start": 326.88,
      "end": 333.04,
      "text": " looks like right now. On that server, it'll look like this. This right here is Dwight's password.",
      "tokens": [
        50364,
        1542,
        411,
        558,
        586,
        13,
        1282,
        300,
        7154,
        11,
        309,
        603,
        574,
        411,
        341,
        13,
        639,
        558,
        510,
        307,
        41448,
        397,
        311,
        11524,
        13,
        50672
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09619089629915026,
      "compression_ratio": 1.786624203821656,
      "no_speech_prob": 0.0013170347083359957
    },
    {
      "id": 63,
      "seek": 32688,
      "start": 333.04,
      "end": 337.92,
      "text": " This crazy mess of numbers and letters is called a hash. So when Dwight created this password,",
      "tokens": [
        50672,
        639,
        3219,
        2082,
        295,
        3547,
        293,
        7825,
        307,
        1219,
        257,
        22019,
        13,
        407,
        562,
        41448,
        397,
        2942,
        341,
        11524,
        11,
        50916
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09619089629915026,
      "compression_ratio": 1.786624203821656,
      "no_speech_prob": 0.0013170347083359957
    },
    {
      "id": 64,
      "seek": 32688,
      "start": 337.92,
      "end": 342.56,
      "text": " Bears beats, the coffee server hashed it. Basically put it in his mouth, chewed it up, and spit it",
      "tokens": [
        50916,
        50180,
        16447,
        11,
        264,
        4982,
        7154,
        22019,
        292,
        309,
        13,
        8537,
        829,
        309,
        294,
        702,
        4525,
        11,
        21200,
        292,
        309,
        493,
        11,
        293,
        22127,
        309,
        51148
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09619089629915026,
      "compression_ratio": 1.786624203821656,
      "no_speech_prob": 0.0013170347083359957
    },
    {
      "id": 65,
      "seek": 32688,
      "start": 342.56,
      "end": 346.15999999999997,
      "text": " out. Looks like this now. Now it's a lot more complex than just chewing it up and spitting it",
      "tokens": [
        51148,
        484,
        13,
        10027,
        411,
        341,
        586,
        13,
        823,
        309,
        311,
        257,
        688,
        544,
        3997,
        813,
        445,
        31444,
        309,
        493,
        293,
        637,
        2414,
        309,
        51328
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09619089629915026,
      "compression_ratio": 1.786624203821656,
      "no_speech_prob": 0.0013170347083359957
    },
    {
      "id": 66,
      "seek": 32688,
      "start": 346.15999999999997,
      "end": 351.68,
      "text": " out. For the server to turn Bears beats into this, it uses these crazy hashing algorithms,",
      "tokens": [
        51328,
        484,
        13,
        1171,
        264,
        7154,
        281,
        1261,
        50180,
        16447,
        666,
        341,
        11,
        309,
        4960,
        613,
        3219,
        575,
        571,
        14642,
        11,
        51604
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09619089629915026,
      "compression_ratio": 1.786624203821656,
      "no_speech_prob": 0.0013170347083359957
    },
    {
      "id": 67,
      "seek": 32688,
      "start": 351.68,
      "end": 356.15999999999997,
      "text": " which without getting two in the weeds on it, is just a crazy math problem function,",
      "tokens": [
        51604,
        597,
        1553,
        1242,
        732,
        294,
        264,
        26370,
        322,
        309,
        11,
        307,
        445,
        257,
        3219,
        5221,
        1154,
        2445,
        11,
        51828
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09619089629915026,
      "compression_ratio": 1.786624203821656,
      "no_speech_prob": 0.0013170347083359957
    },
    {
      "id": 68,
      "seek": 35616,
      "start": 356.16,
      "end": 359.44,
      "text": " turning it into this. You might already be familiar with some of the hashing algorithms out",
      "tokens": [
        50364,
        6246,
        309,
        666,
        341,
        13,
        509,
        1062,
        1217,
        312,
        4963,
        365,
        512,
        295,
        264,
        575,
        571,
        14642,
        484,
        50528
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11030030438280482,
      "compression_ratio": 1.5993150684931507,
      "no_speech_prob": 0.002408578060567379
    },
    {
      "id": 69,
      "seek": 35616,
      "start": 359.44,
      "end": 366.40000000000003,
      "text": " there. Popular ones are MD5, SHA256, you got NTLM on Windows. And if we were to somehow hack into",
      "tokens": [
        50528,
        456,
        13,
        37637,
        2306,
        366,
        22521,
        20,
        11,
        38820,
        6074,
        21,
        11,
        291,
        658,
        43452,
        43,
        44,
        322,
        8591,
        13,
        400,
        498,
        321,
        645,
        281,
        6063,
        10339,
        666,
        50876
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11030030438280482,
      "compression_ratio": 1.5993150684931507,
      "no_speech_prob": 0.002408578060567379
    },
    {
      "id": 70,
      "seek": 35616,
      "start": 366.40000000000003,
      "end": 371.28000000000003,
      "text": " the server via other means and get a list of all the username and passwords that look like this,",
      "tokens": [
        50876,
        264,
        7154,
        5766,
        661,
        1355,
        293,
        483,
        257,
        1329,
        295,
        439,
        264,
        30351,
        293,
        33149,
        300,
        574,
        411,
        341,
        11,
        51120
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11030030438280482,
      "compression_ratio": 1.5993150684931507,
      "no_speech_prob": 0.002408578060567379
    },
    {
      "id": 71,
      "seek": 35616,
      "start": 371.84000000000003,
      "end": 377.28000000000003,
      "text": " it would do us zero good, no good at all. When Dwight logs in, and he put this password in,",
      "tokens": [
        51148,
        309,
        576,
        360,
        505,
        4018,
        665,
        11,
        572,
        665,
        412,
        439,
        13,
        1133,
        41448,
        397,
        20820,
        294,
        11,
        293,
        415,
        829,
        341,
        11524,
        294,
        11,
        51420
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11030030438280482,
      "compression_ratio": 1.5993150684931507,
      "no_speech_prob": 0.002408578060567379
    },
    {
      "id": 72,
      "seek": 35616,
      "start": 377.28000000000003,
      "end": 382.16,
      "text": " Bears beats, the server takes this password, chews it up, spits it out, or in this case,",
      "tokens": [
        51420,
        50180,
        16447,
        11,
        264,
        7154,
        2516,
        341,
        11524,
        11,
        947,
        14358,
        309,
        493,
        11,
        637,
        1208,
        309,
        484,
        11,
        420,
        294,
        341,
        1389,
        11,
        51664
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11030030438280482,
      "compression_ratio": 1.5993150684931507,
      "no_speech_prob": 0.002408578060567379
    },
    {
      "id": 73,
      "seek": 38216,
      "start": 382.16,
      "end": 387.20000000000005,
      "text": " runs it through its MD5 algorithm. And if the hash matches the hash stored in its database,",
      "tokens": [
        50364,
        6676,
        309,
        807,
        1080,
        22521,
        20,
        9284,
        13,
        400,
        498,
        264,
        22019,
        10676,
        264,
        22019,
        12187,
        294,
        1080,
        8149,
        11,
        50616
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07971715927124023,
      "compression_ratio": 1.7361963190184049,
      "no_speech_prob": 0.008460583165287971
    },
    {
      "id": 74,
      "seek": 38216,
      "start": 387.20000000000005,
      "end": 391.68,
      "text": " you can go in, you're good. This should be how most websites and services out there are storing",
      "tokens": [
        50616,
        291,
        393,
        352,
        294,
        11,
        291,
        434,
        665,
        13,
        639,
        820,
        312,
        577,
        881,
        12891,
        293,
        3328,
        484,
        456,
        366,
        26085,
        50840
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07971715927124023,
      "compression_ratio": 1.7361963190184049,
      "no_speech_prob": 0.008460583165287971
    },
    {
      "id": 75,
      "seek": 38216,
      "start": 391.68,
      "end": 396.96000000000004,
      "text": " your passwords, not in plain text, like the RockU server. No, no, it's hashed. So if they do get",
      "tokens": [
        50840,
        428,
        33149,
        11,
        406,
        294,
        11121,
        2487,
        11,
        411,
        264,
        6922,
        52,
        7154,
        13,
        883,
        11,
        572,
        11,
        309,
        311,
        22019,
        292,
        13,
        407,
        498,
        436,
        360,
        483,
        51104
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07971715927124023,
      "compression_ratio": 1.7361963190184049,
      "no_speech_prob": 0.008460583165287971
    },
    {
      "id": 76,
      "seek": 38216,
      "start": 396.96000000000004,
      "end": 401.92,
      "text": " hacked and hackers get that list of usernames and passwords, they don't have your password yet.",
      "tokens": [
        51104,
        36218,
        293,
        39766,
        483,
        300,
        1329,
        295,
        505,
        1248,
        1632,
        293,
        33149,
        11,
        436,
        500,
        380,
        362,
        428,
        11524,
        1939,
        13,
        51352
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07971715927124023,
      "compression_ratio": 1.7361963190184049,
      "no_speech_prob": 0.008460583165287971
    },
    {
      "id": 77,
      "seek": 38216,
      "start": 401.92,
      "end": 407.20000000000005,
      "text": " Here's what we can do. We may not have Dwight's password. But if we have his hash, if we somehow",
      "tokens": [
        51352,
        1692,
        311,
        437,
        321,
        393,
        360,
        13,
        492,
        815,
        406,
        362,
        41448,
        397,
        311,
        11524,
        13,
        583,
        498,
        321,
        362,
        702,
        22019,
        11,
        498,
        321,
        6063,
        51616
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07971715927124023,
      "compression_ratio": 1.7361963190184049,
      "no_speech_prob": 0.008460583165287971
    },
    {
      "id": 78,
      "seek": 38216,
      "start": 407.20000000000005,
      "end": 411.20000000000005,
      "text": " got that information, we can do some offline password cracking to figure out what it is.",
      "tokens": [
        51616,
        658,
        300,
        1589,
        11,
        321,
        393,
        360,
        512,
        21857,
        11524,
        25229,
        281,
        2573,
        484,
        437,
        309,
        307,
        13,
        51816
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07971715927124023,
      "compression_ratio": 1.7361963190184049,
      "no_speech_prob": 0.008460583165287971
    },
    {
      "id": 79,
      "seek": 41120,
      "start": 411.2,
      "end": 416.8,
      "text": " Now again, we can't reverse engineer it, but we can brute force our way into it. We're going to do",
      "tokens": [
        50364,
        823,
        797,
        11,
        321,
        393,
        380,
        9943,
        11403,
        309,
        11,
        457,
        321,
        393,
        47909,
        3464,
        527,
        636,
        666,
        309,
        13,
        492,
        434,
        516,
        281,
        360,
        50644
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12815143140547114,
      "compression_ratio": 1.8722741433021808,
      "no_speech_prob": 0.0011654431000351906
    },
    {
      "id": 80,
      "seek": 41120,
      "start": 416.8,
      "end": 420.15999999999997,
      "text": " what we did before. We're going to take our word list, and we're going to try and use each of these",
      "tokens": [
        50644,
        437,
        321,
        630,
        949,
        13,
        492,
        434,
        516,
        281,
        747,
        527,
        1349,
        1329,
        11,
        293,
        321,
        434,
        516,
        281,
        853,
        293,
        764,
        1184,
        295,
        613,
        50812
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12815143140547114,
      "compression_ratio": 1.8722741433021808,
      "no_speech_prob": 0.0011654431000351906
    },
    {
      "id": 81,
      "seek": 41120,
      "start": 420.15999999999997,
      "end": 424.96,
      "text": " passwords. But instead of trying to log into the server, we're going to run that hashing algorithm.",
      "tokens": [
        50812,
        33149,
        13,
        583,
        2602,
        295,
        1382,
        281,
        3565,
        666,
        264,
        7154,
        11,
        321,
        434,
        516,
        281,
        1190,
        300,
        575,
        571,
        9284,
        13,
        51052
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12815143140547114,
      "compression_ratio": 1.8722741433021808,
      "no_speech_prob": 0.0011654431000351906
    },
    {
      "id": 82,
      "seek": 41120,
      "start": 424.96,
      "end": 430.4,
      "text": " We're going to chew it up and spit it out. We're going to run that MD5 algorithm and see if it matches",
      "tokens": [
        51052,
        492,
        434,
        516,
        281,
        21200,
        309,
        493,
        293,
        22127,
        309,
        484,
        13,
        492,
        434,
        516,
        281,
        1190,
        300,
        22521,
        20,
        9284,
        293,
        536,
        498,
        309,
        10676,
        51324
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12815143140547114,
      "compression_ratio": 1.8722741433021808,
      "no_speech_prob": 0.0011654431000351906
    },
    {
      "id": 83,
      "seek": 41120,
      "start": 430.4,
      "end": 435.28,
      "text": " the hash we have for Dwight's route. So we'll take the first password, salesman of the year three,",
      "tokens": [
        51324,
        264,
        22019,
        321,
        362,
        337,
        41448,
        397,
        311,
        7955,
        13,
        407,
        321,
        603,
        747,
        264,
        700,
        11524,
        11,
        5763,
        1601,
        295,
        264,
        1064,
        1045,
        11,
        51568
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12815143140547114,
      "compression_ratio": 1.8722741433021808,
      "no_speech_prob": 0.0011654431000351906
    },
    {
      "id": 84,
      "seek": 41120,
      "start": 435.28,
      "end": 440.88,
      "text": " run it through. It looks like this, doesn't match. We move on. We try password 123. And we get this,",
      "tokens": [
        51568,
        1190,
        309,
        807,
        13,
        467,
        1542,
        411,
        341,
        11,
        1177,
        380,
        2995,
        13,
        492,
        1286,
        322,
        13,
        492,
        853,
        11524,
        34466,
        13,
        400,
        321,
        483,
        341,
        11,
        51848
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12815143140547114,
      "compression_ratio": 1.8722741433021808,
      "no_speech_prob": 0.0011654431000351906
    },
    {
      "id": 85,
      "seek": 44120,
      "start": 441.2,
      "end": 445.59999999999997,
      "text": " not a match. We move on and we keep going until we find a hash that matches. And we'll try bears",
      "tokens": [
        50364,
        406,
        257,
        2995,
        13,
        492,
        1286,
        322,
        293,
        321,
        1066,
        516,
        1826,
        321,
        915,
        257,
        22019,
        300,
        10676,
        13,
        400,
        321,
        603,
        853,
        17276,
        50584
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10011475641022688,
      "compression_ratio": 1.8370607028753994,
      "no_speech_prob": 0.0008566711912862957
    },
    {
      "id": 86,
      "seek": 44120,
      "start": 445.59999999999997,
      "end": 451.28,
      "text": " beats and boom, this one does match a plus. Let's go. We got the password. Let's hack into the system.",
      "tokens": [
        50584,
        16447,
        293,
        9351,
        11,
        341,
        472,
        775,
        2995,
        257,
        1804,
        13,
        961,
        311,
        352,
        13,
        492,
        658,
        264,
        11524,
        13,
        961,
        311,
        10339,
        666,
        264,
        1185,
        13,
        50868
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10011475641022688,
      "compression_ratio": 1.8370607028753994,
      "no_speech_prob": 0.0008566711912862957
    },
    {
      "id": 87,
      "seek": 44120,
      "start": 451.28,
      "end": 455.92,
      "text": " Let's do this right now. Okay, here in Cali, we're going to try out a tool called hash cat.",
      "tokens": [
        50868,
        961,
        311,
        360,
        341,
        558,
        586,
        13,
        1033,
        11,
        510,
        294,
        3511,
        72,
        11,
        321,
        434,
        516,
        281,
        853,
        484,
        257,
        2290,
        1219,
        22019,
        3857,
        13,
        51100
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10011475641022688,
      "compression_ratio": 1.8370607028753994,
      "no_speech_prob": 0.0008566711912862957
    },
    {
      "id": 88,
      "seek": 44120,
      "start": 455.92,
      "end": 459.76,
      "text": " For this tool, we're going to use two things. First, our word list, our list of possible",
      "tokens": [
        51100,
        1171,
        341,
        2290,
        11,
        321,
        434,
        516,
        281,
        764,
        732,
        721,
        13,
        2386,
        11,
        527,
        1349,
        1329,
        11,
        527,
        1329,
        295,
        1944,
        51292
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10011475641022688,
      "compression_ratio": 1.8370607028753994,
      "no_speech_prob": 0.0008566711912862957
    },
    {
      "id": 89,
      "seek": 44120,
      "start": 459.76,
      "end": 464.15999999999997,
      "text": " passwords and two, we'll need our file of hashes. Let's go ahead and create this real quick. Linux",
      "tokens": [
        51292,
        33149,
        293,
        732,
        11,
        321,
        603,
        643,
        527,
        3991,
        295,
        575,
        8076,
        13,
        961,
        311,
        352,
        2286,
        293,
        1884,
        341,
        957,
        1702,
        13,
        18734,
        51512
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10011475641022688,
      "compression_ratio": 1.8370607028753994,
      "no_speech_prob": 0.0008566711912862957
    },
    {
      "id": 90,
      "seek": 44120,
      "start": 464.15999999999997,
      "end": 469.91999999999996,
      "text": " will store its hash passwords in the shadow file. So I'll grab that right now. I'll just create",
      "tokens": [
        51512,
        486,
        3531,
        1080,
        22019,
        33149,
        294,
        264,
        8576,
        3991,
        13,
        407,
        286,
        603,
        4444,
        300,
        558,
        586,
        13,
        286,
        603,
        445,
        1884,
        51800
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10011475641022688,
      "compression_ratio": 1.8370607028753994,
      "no_speech_prob": 0.0008566711912862957
    },
    {
      "id": 91,
      "seek": 46992,
      "start": 469.92,
      "end": 475.92,
      "text": " that file, paste all that stuff in there. Save that. Now let's crack a password. The command will",
      "tokens": [
        50364,
        300,
        3991,
        11,
        9163,
        439,
        300,
        1507,
        294,
        456,
        13,
        15541,
        300,
        13,
        823,
        718,
        311,
        6226,
        257,
        11524,
        13,
        440,
        5622,
        486,
        50664
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12042603031281501,
      "compression_ratio": 1.8204334365325077,
      "no_speech_prob": 0.007544196210801601
    },
    {
      "id": 92,
      "seek": 46992,
      "start": 475.92,
      "end": 481.52000000000004,
      "text": " be pseudo hash cats. Now real quick, hash cats pretty crazy. You can do a lot of stuff. I'm going to",
      "tokens": [
        50664,
        312,
        35899,
        22019,
        11111,
        13,
        823,
        957,
        1702,
        11,
        22019,
        11111,
        1238,
        3219,
        13,
        509,
        393,
        360,
        257,
        688,
        295,
        1507,
        13,
        286,
        478,
        516,
        281,
        50944
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12042603031281501,
      "compression_ratio": 1.8204334365325077,
      "no_speech_prob": 0.007544196210801601
    },
    {
      "id": 93,
      "seek": 46992,
      "start": 481.52000000000004,
      "end": 485.28000000000003,
      "text": " show you the basics real quick. First, we'll start with the method, which we'll specify with dash a.",
      "tokens": [
        50944,
        855,
        291,
        264,
        14688,
        957,
        1702,
        13,
        2386,
        11,
        321,
        603,
        722,
        365,
        264,
        3170,
        11,
        597,
        321,
        603,
        16500,
        365,
        8240,
        257,
        13,
        51132
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12042603031281501,
      "compression_ratio": 1.8204334365325077,
      "no_speech_prob": 0.007544196210801601
    },
    {
      "id": 94,
      "seek": 46992,
      "start": 486.16,
      "end": 489.36,
      "text": " Let's go to the manual page of our hash cat real quick. So open up another terminal window and",
      "tokens": [
        51176,
        961,
        311,
        352,
        281,
        264,
        9688,
        3028,
        295,
        527,
        22019,
        3857,
        957,
        1702,
        13,
        407,
        1269,
        493,
        1071,
        14709,
        4910,
        293,
        51336
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12042603031281501,
      "compression_ratio": 1.8204334365325077,
      "no_speech_prob": 0.007544196210801601
    },
    {
      "id": 95,
      "seek": 46992,
      "start": 489.36,
      "end": 495.04,
      "text": " go to man and hash cats. A lot of stuff going on. Let me scroll through to where I'm talking about.",
      "tokens": [
        51336,
        352,
        281,
        587,
        293,
        22019,
        11111,
        13,
        316,
        688,
        295,
        1507,
        516,
        322,
        13,
        961,
        385,
        11369,
        807,
        281,
        689,
        286,
        478,
        1417,
        466,
        13,
        51620
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12042603031281501,
      "compression_ratio": 1.8204334365325077,
      "no_speech_prob": 0.007544196210801601
    },
    {
      "id": 96,
      "seek": 46992,
      "start": 495.04,
      "end": 499.52000000000004,
      "text": " So we used dash a and here are the options. And if I talked about every one of these options,",
      "tokens": [
        51620,
        407,
        321,
        1143,
        8240,
        257,
        293,
        510,
        366,
        264,
        3956,
        13,
        400,
        498,
        286,
        2825,
        466,
        633,
        472,
        295,
        613,
        3956,
        11,
        51844
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12042603031281501,
      "compression_ratio": 1.8204334365325077,
      "no_speech_prob": 0.007544196210801601
    },
    {
      "id": 97,
      "seek": 49952,
      "start": 499.52,
      "end": 503.59999999999997,
      "text": " this video would be like four hours long. So I'm only going to talk about option zero,",
      "tokens": [
        50364,
        341,
        960,
        576,
        312,
        411,
        1451,
        2496,
        938,
        13,
        407,
        286,
        478,
        787,
        516,
        281,
        751,
        466,
        3614,
        4018,
        11,
        50568
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10744997512462527,
      "compression_ratio": 1.930795847750865,
      "no_speech_prob": 0.0029053378384560347
    },
    {
      "id": 98,
      "seek": 49952,
      "start": 504.32,
      "end": 508.96,
      "text": " the straight option, which is just going through a word list and doing what we just talked about.",
      "tokens": [
        50604,
        264,
        2997,
        3614,
        11,
        597,
        307,
        445,
        516,
        807,
        257,
        1349,
        1329,
        293,
        884,
        437,
        321,
        445,
        2825,
        466,
        13,
        50836
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10744997512462527,
      "compression_ratio": 1.930795847750865,
      "no_speech_prob": 0.0029053378384560347
    },
    {
      "id": 99,
      "seek": 49952,
      "start": 508.96,
      "end": 513.92,
      "text": " These other options, which I would ignore brute force, but combination hybrid word list and mask,",
      "tokens": [
        50836,
        1981,
        661,
        3956,
        11,
        597,
        286,
        576,
        11200,
        47909,
        3464,
        11,
        457,
        6562,
        13051,
        1349,
        1329,
        293,
        6094,
        11,
        51084
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10744997512462527,
      "compression_ratio": 1.930795847750865,
      "no_speech_prob": 0.0029053378384560347
    },
    {
      "id": 100,
      "seek": 49952,
      "start": 513.92,
      "end": 517.68,
      "text": " hybrid mask with word list, it's some crazy stuff. It's not just going through a word list,",
      "tokens": [
        51084,
        13051,
        6094,
        365,
        1349,
        1329,
        11,
        309,
        311,
        512,
        3219,
        1507,
        13,
        467,
        311,
        406,
        445,
        516,
        807,
        257,
        1349,
        1329,
        11,
        51272
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10744997512462527,
      "compression_ratio": 1.930795847750865,
      "no_speech_prob": 0.0029053378384560347
    },
    {
      "id": 101,
      "seek": 49952,
      "start": 517.68,
      "end": 522.56,
      "text": " but it's auto generating these crazy password list and these password combinations and what",
      "tokens": [
        51272,
        457,
        309,
        311,
        8399,
        17746,
        613,
        3219,
        11524,
        1329,
        293,
        613,
        11524,
        21267,
        293,
        437,
        51516
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10744997512462527,
      "compression_ratio": 1.930795847750865,
      "no_speech_prob": 0.0029053378384560347
    },
    {
      "id": 102,
      "seek": 49952,
      "start": 522.56,
      "end": 526.56,
      "text": " password characters you can use. It can be intense and perhaps as a video for another time.",
      "tokens": [
        51516,
        11524,
        4342,
        291,
        393,
        764,
        13,
        467,
        393,
        312,
        9447,
        293,
        4317,
        382,
        257,
        960,
        337,
        1071,
        565,
        13,
        51716
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10744997512462527,
      "compression_ratio": 1.930795847750865,
      "no_speech_prob": 0.0029053378384560347
    },
    {
      "id": 103,
      "seek": 52656,
      "start": 526.56,
      "end": 531.52,
      "text": " For now, we're going to talk about just a straight dictionary attack option zero. So we'll put in",
      "tokens": [
        50364,
        1171,
        586,
        11,
        321,
        434,
        516,
        281,
        751,
        466,
        445,
        257,
        2997,
        25890,
        2690,
        3614,
        4018,
        13,
        407,
        321,
        603,
        829,
        294,
        50612
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1227518364235207,
      "compression_ratio": 1.7590361445783131,
      "no_speech_prob": 0.003242446342483163
    },
    {
      "id": 104,
      "seek": 52656,
      "start": 531.52,
      "end": 536.56,
      "text": " zero. Now next is our hashing type. We'll put in dash M to specify that. Let's go back to our man",
      "tokens": [
        50612,
        4018,
        13,
        823,
        958,
        307,
        527,
        575,
        571,
        2010,
        13,
        492,
        603,
        829,
        294,
        8240,
        376,
        281,
        16500,
        300,
        13,
        961,
        311,
        352,
        646,
        281,
        527,
        587,
        50864
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1227518364235207,
      "compression_ratio": 1.7590361445783131,
      "no_speech_prob": 0.003242446342483163
    },
    {
      "id": 105,
      "seek": 52656,
      "start": 536.56,
      "end": 542.0,
      "text": " page. Here we have our hashing types and there's a lot, a lot of hashing types. And it's going to",
      "tokens": [
        50864,
        3028,
        13,
        1692,
        321,
        362,
        527,
        575,
        571,
        3467,
        293,
        456,
        311,
        257,
        688,
        11,
        257,
        688,
        295,
        575,
        571,
        3467,
        13,
        400,
        309,
        311,
        516,
        281,
        51136
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1227518364235207,
      "compression_ratio": 1.7590361445783131,
      "no_speech_prob": 0.003242446342483163
    },
    {
      "id": 106,
      "seek": 52656,
      "start": 542.0,
      "end": 545.1199999999999,
      "text": " be based on what type of password you're trying to hack. For example, if you know you're going to be",
      "tokens": [
        51136,
        312,
        2361,
        322,
        437,
        2010,
        295,
        11524,
        291,
        434,
        1382,
        281,
        10339,
        13,
        1171,
        1365,
        11,
        498,
        291,
        458,
        291,
        434,
        516,
        281,
        312,
        51292
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1227518364235207,
      "compression_ratio": 1.7590361445783131,
      "no_speech_prob": 0.003242446342483163
    },
    {
      "id": 107,
      "seek": 52656,
      "start": 545.1199999999999,
      "end": 551.4399999999999,
      "text": " hacking Cisco, look at that, you'll enter the code 5700 in that option for a plain Jane MD5,",
      "tokens": [
        51292,
        31422,
        38528,
        11,
        574,
        412,
        300,
        11,
        291,
        603,
        3242,
        264,
        3089,
        1025,
        18197,
        294,
        300,
        3614,
        337,
        257,
        11121,
        13048,
        22521,
        20,
        11,
        51608
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1227518364235207,
      "compression_ratio": 1.7590361445783131,
      "no_speech_prob": 0.003242446342483163
    },
    {
      "id": 108,
      "seek": 52656,
      "start": 551.4399999999999,
      "end": 556.0,
      "text": " it'll be zero 1000 for NTLM, which if you're hacking Windows based passwords, that's what you'll",
      "tokens": [
        51608,
        309,
        603,
        312,
        4018,
        9714,
        337,
        43452,
        43,
        44,
        11,
        597,
        498,
        291,
        434,
        31422,
        8591,
        2361,
        33149,
        11,
        300,
        311,
        437,
        291,
        603,
        51836
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1227518364235207,
      "compression_ratio": 1.7590361445783131,
      "no_speech_prob": 0.003242446342483163
    },
    {
      "id": 109,
      "seek": 55600,
      "start": 556.0,
      "end": 561.92,
      "text": " use. And for our example, we're going to be using 1800 for Shaw 512 UNIX passwords. So we'll put in",
      "tokens": [
        50364,
        764,
        13,
        400,
        337,
        527,
        1365,
        11,
        321,
        434,
        516,
        281,
        312,
        1228,
        24327,
        337,
        27132,
        1025,
        4762,
        8229,
        21124,
        33149,
        13,
        407,
        321,
        603,
        829,
        294,
        50660
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10716805458068848,
      "compression_ratio": 1.7912087912087913,
      "no_speech_prob": 0.002168052364140749
    },
    {
      "id": 110,
      "seek": 55600,
      "start": 561.92,
      "end": 569.12,
      "text": " 1800. I'm also going to throw in a dash lowercase o and specify a file name, crack passwords.txt.",
      "tokens": [
        50660,
        24327,
        13,
        286,
        478,
        611,
        516,
        281,
        3507,
        294,
        257,
        8240,
        3126,
        9765,
        277,
        293,
        16500,
        257,
        3991,
        1315,
        11,
        6226,
        33149,
        13,
        83,
        734,
        13,
        51020
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10716805458068848,
      "compression_ratio": 1.7912087912087913,
      "no_speech_prob": 0.002168052364140749
    },
    {
      "id": 111,
      "seek": 55600,
      "start": 569.12,
      "end": 573.68,
      "text": " This is where it's going to store the information we find out. And then finally, the two files we're",
      "tokens": [
        51020,
        639,
        307,
        689,
        309,
        311,
        516,
        281,
        3531,
        264,
        1589,
        321,
        915,
        484,
        13,
        400,
        550,
        2721,
        11,
        264,
        732,
        7098,
        321,
        434,
        51248
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10716805458068848,
      "compression_ratio": 1.7912087912087913,
      "no_speech_prob": 0.002168052364140749
    },
    {
      "id": 112,
      "seek": 55600,
      "start": 573.68,
      "end": 579.12,
      "text": " going to be using the first will be our hashes, which we named hashes.txt. And then our word",
      "tokens": [
        51248,
        516,
        281,
        312,
        1228,
        264,
        700,
        486,
        312,
        527,
        575,
        8076,
        11,
        597,
        321,
        4926,
        575,
        8076,
        13,
        83,
        734,
        13,
        400,
        550,
        527,
        1349,
        51520
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10716805458068848,
      "compression_ratio": 1.7912087912087913,
      "no_speech_prob": 0.002168052364140749
    },
    {
      "id": 113,
      "seek": 55600,
      "start": 579.12,
      "end": 585.04,
      "text": " list we're going to use, which was word list.txt. And that's all we need. Hash cats about to spit",
      "tokens": [
        51520,
        1329,
        321,
        434,
        516,
        281,
        764,
        11,
        597,
        390,
        1349,
        1329,
        13,
        83,
        734,
        13,
        400,
        300,
        311,
        439,
        321,
        643,
        13,
        30775,
        11111,
        466,
        281,
        22127,
        51816
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10716805458068848,
      "compression_ratio": 1.7912087912087913,
      "no_speech_prob": 0.002168052364140749
    },
    {
      "id": 114,
      "seek": 58504,
      "start": 585.04,
      "end": 595.28,
      "text": " some words out. Let's do it. Here we go. And that gum that was fast. Now again, the word list was not",
      "tokens": [
        50364,
        512,
        2283,
        484,
        13,
        961,
        311,
        360,
        309,
        13,
        1692,
        321,
        352,
        13,
        400,
        300,
        19973,
        300,
        390,
        2370,
        13,
        823,
        797,
        11,
        264,
        1349,
        1329,
        390,
        406,
        50876
      ],
      "temperature": 0.0,
      "avg_logprob": -0.19111801076818397,
      "compression_ratio": 1.652542372881356,
      "no_speech_prob": 0.00473927054554224
    },
    {
      "id": 115,
      "seek": 58504,
      "start": 595.28,
      "end": 599.68,
      "text": " that big. And it found the password if you look here at candidates dot number one, it gave us two",
      "tokens": [
        50876,
        300,
        955,
        13,
        400,
        309,
        1352,
        264,
        11524,
        498,
        291,
        574,
        510,
        412,
        11255,
        5893,
        1230,
        472,
        11,
        309,
        2729,
        505,
        732,
        51096
      ],
      "temperature": 0.0,
      "avg_logprob": -0.19111801076818397,
      "compression_ratio": 1.652542372881356,
      "no_speech_prob": 0.00473927054554224
    },
    {
      "id": 116,
      "seek": 58504,
      "start": 599.68,
      "end": 605.5999999999999,
      "text": " options. M&M and bears beats. Now we know that bears beats is the correct password. So great job.",
      "tokens": [
        51096,
        3956,
        13,
        376,
        5,
        44,
        293,
        17276,
        16447,
        13,
        823,
        321,
        458,
        300,
        17276,
        16447,
        307,
        264,
        3006,
        11524,
        13,
        407,
        869,
        1691,
        13,
        51392
      ],
      "temperature": 0.0,
      "avg_logprob": -0.19111801076818397,
      "compression_ratio": 1.652542372881356,
      "no_speech_prob": 0.00473927054554224
    },
    {
      "id": 117,
      "seek": 58504,
      "start": 605.5999999999999,
      "end": 610.16,
      "text": " Hascat. Now let's try one more let's try a Windows based password. I'll do pseudo hash cats.",
      "tokens": [
        51392,
        8646,
        18035,
        13,
        823,
        718,
        311,
        853,
        472,
        544,
        718,
        311,
        853,
        257,
        8591,
        2361,
        11524,
        13,
        286,
        603,
        360,
        35899,
        22019,
        11111,
        13,
        51620
      ],
      "temperature": 0.0,
      "avg_logprob": -0.19111801076818397,
      "compression_ratio": 1.652542372881356,
      "no_speech_prob": 0.00473927054554224
    },
    {
      "id": 118,
      "seek": 61016,
      "start": 610.8,
      "end": 617.68,
      "text": " Once more do a dash a specify not dash one dash a specify my method which will be zero dash m.",
      "tokens": [
        50396,
        3443,
        544,
        360,
        257,
        8240,
        257,
        16500,
        406,
        8240,
        472,
        8240,
        257,
        16500,
        452,
        3170,
        597,
        486,
        312,
        4018,
        8240,
        275,
        13,
        50740
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1525868069041859,
      "compression_ratio": 1.7737226277372262,
      "no_speech_prob": 0.05774284154176712
    },
    {
      "id": 119,
      "seek": 61016,
      "start": 618.3199999999999,
      "end": 624.3199999999999,
      "text": " This time I'm doing NTLM for Microsoft Windows. I know this to be 1000 as the code by looking at",
      "tokens": [
        50772,
        639,
        565,
        286,
        478,
        884,
        43452,
        43,
        44,
        337,
        8116,
        8591,
        13,
        286,
        458,
        341,
        281,
        312,
        9714,
        382,
        264,
        3089,
        538,
        1237,
        412,
        51072
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1525868069041859,
      "compression_ratio": 1.7737226277372262,
      "no_speech_prob": 0.05774284154176712
    },
    {
      "id": 120,
      "seek": 61016,
      "start": 624.3199999999999,
      "end": 629.36,
      "text": " the manual page. I'll do a dash lowercase o for cracked passwords dot txt where I'm going to store",
      "tokens": [
        51072,
        264,
        9688,
        3028,
        13,
        286,
        603,
        360,
        257,
        8240,
        3126,
        9765,
        277,
        337,
        25140,
        33149,
        5893,
        256,
        734,
        689,
        286,
        478,
        516,
        281,
        3531,
        51324
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1525868069041859,
      "compression_ratio": 1.7737226277372262,
      "no_speech_prob": 0.05774284154176712
    },
    {
      "id": 121,
      "seek": 61016,
      "start": 629.36,
      "end": 634.24,
      "text": " my stuff and then my hash now I could specify a file. This time I'm going to specify the hash.",
      "tokens": [
        51324,
        452,
        1507,
        293,
        550,
        452,
        22019,
        586,
        286,
        727,
        16500,
        257,
        3991,
        13,
        639,
        565,
        286,
        478,
        516,
        281,
        16500,
        264,
        22019,
        13,
        51568
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1525868069041859,
      "compression_ratio": 1.7737226277372262,
      "no_speech_prob": 0.05774284154176712
    },
    {
      "id": 122,
      "seek": 61016,
      "start": 634.24,
      "end": 637.92,
      "text": " It's going to copy that in there. So I'll just put that in quotes. So I got the one hash I'm looking",
      "tokens": [
        51568,
        467,
        311,
        516,
        281,
        5055,
        300,
        294,
        456,
        13,
        407,
        286,
        603,
        445,
        829,
        300,
        294,
        19963,
        13,
        407,
        286,
        658,
        264,
        472,
        22019,
        286,
        478,
        1237,
        51752
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1525868069041859,
      "compression_ratio": 1.7737226277372262,
      "no_speech_prob": 0.05774284154176712
    },
    {
      "id": 123,
      "seek": 63792,
      "start": 637.92,
      "end": 646.4799999999999,
      "text": " for and then I'll put my word list in right here. Word list txt and go. Now it's a bit wonky",
      "tokens": [
        50364,
        337,
        293,
        550,
        286,
        603,
        829,
        452,
        1349,
        1329,
        294,
        558,
        510,
        13,
        8725,
        1329,
        256,
        734,
        293,
        352,
        13,
        823,
        309,
        311,
        257,
        857,
        1582,
        4133,
        50792
      ],
      "temperature": 0.0,
      "avg_logprob": -0.15697866632032764,
      "compression_ratio": 1.7142857142857142,
      "no_speech_prob": 0.00881255604326725
    },
    {
      "id": 124,
      "seek": 63792,
      "start": 646.4799999999999,
      "end": 650.3199999999999,
      "text": " because it says the candidates right now are bears beats which I know is not the password.",
      "tokens": [
        50792,
        570,
        309,
        1619,
        264,
        11255,
        558,
        586,
        366,
        17276,
        16447,
        597,
        286,
        458,
        307,
        406,
        264,
        11524,
        13,
        50984
      ],
      "temperature": 0.0,
      "avg_logprob": -0.15697866632032764,
      "compression_ratio": 1.7142857142857142,
      "no_speech_prob": 0.00881255604326725
    },
    {
      "id": 125,
      "seek": 63792,
      "start": 650.3199999999999,
      "end": 656.0799999999999,
      "text": " But if we go to the top here, it says the session status cracked. It said it did it with this hash.",
      "tokens": [
        50984,
        583,
        498,
        321,
        352,
        281,
        264,
        1192,
        510,
        11,
        309,
        1619,
        264,
        5481,
        6558,
        25140,
        13,
        467,
        848,
        309,
        630,
        309,
        365,
        341,
        22019,
        13,
        51272
      ],
      "temperature": 0.0,
      "avg_logprob": -0.15697866632032764,
      "compression_ratio": 1.7142857142857142,
      "no_speech_prob": 0.00881255604326725
    },
    {
      "id": 126,
      "seek": 63792,
      "start": 656.0799999999999,
      "end": 661.5999999999999,
      "text": " Let's go look in that file we put that in. So I'll pseudo cats, crack passwords at txt.",
      "tokens": [
        51272,
        961,
        311,
        352,
        574,
        294,
        300,
        3991,
        321,
        829,
        300,
        294,
        13,
        407,
        286,
        603,
        35899,
        11111,
        11,
        6226,
        33149,
        412,
        256,
        734,
        13,
        51548
      ],
      "temperature": 0.0,
      "avg_logprob": -0.15697866632032764,
      "compression_ratio": 1.7142857142857142,
      "no_speech_prob": 0.00881255604326725
    },
    {
      "id": 127,
      "seek": 63792,
      "start": 661.5999999999999,
      "end": 665.76,
      "text": " Let's take a look inside there. There it is. Okay, perfect. There's the hash I used.",
      "tokens": [
        51548,
        961,
        311,
        747,
        257,
        574,
        1854,
        456,
        13,
        821,
        309,
        307,
        13,
        1033,
        11,
        2176,
        13,
        821,
        311,
        264,
        22019,
        286,
        1143,
        13,
        51756
      ],
      "temperature": 0.0,
      "avg_logprob": -0.15697866632032764,
      "compression_ratio": 1.7142857142857142,
      "no_speech_prob": 0.00881255604326725
    },
    {
      "id": 128,
      "seek": 66576,
      "start": 666.4,
      "end": 671.04,
      "text": " And there's the password from our word list that we matched up. And that was indeed the password.",
      "tokens": [
        50396,
        400,
        456,
        311,
        264,
        11524,
        490,
        527,
        1349,
        1329,
        300,
        321,
        21447,
        493,
        13,
        400,
        300,
        390,
        6451,
        264,
        11524,
        13,
        50628
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06581292925654231,
      "compression_ratio": 1.7893081761006289,
      "no_speech_prob": 0.010721534490585327
    },
    {
      "id": 129,
      "seek": 66576,
      "start": 671.04,
      "end": 675.76,
      "text": " So now I have a challenge for you. I want you to use the skills you just learned in this video",
      "tokens": [
        50628,
        407,
        586,
        286,
        362,
        257,
        3430,
        337,
        291,
        13,
        286,
        528,
        291,
        281,
        764,
        264,
        3942,
        291,
        445,
        3264,
        294,
        341,
        960,
        50864
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06581292925654231,
      "compression_ratio": 1.7893081761006289,
      "no_speech_prob": 0.010721534490585327
    },
    {
      "id": 130,
      "seek": 66576,
      "start": 675.76,
      "end": 681.2,
      "text": " to hack or crack my server's passwords. The first five people to do this will win coffee.",
      "tokens": [
        50864,
        281,
        10339,
        420,
        6226,
        452,
        7154,
        311,
        33149,
        13,
        440,
        700,
        1732,
        561,
        281,
        360,
        341,
        486,
        1942,
        4982,
        13,
        51136
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06581292925654231,
      "compression_ratio": 1.7893081761006289,
      "no_speech_prob": 0.010721534490585327
    },
    {
      "id": 131,
      "seek": 66576,
      "start": 681.2,
      "end": 685.92,
      "text": " So link below. Good luck. And if you don't win, that's fine. I'll keep this challenge up for",
      "tokens": [
        51136,
        407,
        2113,
        2507,
        13,
        2205,
        3668,
        13,
        400,
        498,
        291,
        500,
        380,
        1942,
        11,
        300,
        311,
        2489,
        13,
        286,
        603,
        1066,
        341,
        3430,
        493,
        337,
        51372
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06581292925654231,
      "compression_ratio": 1.7893081761006289,
      "no_speech_prob": 0.010721534490585327
    },
    {
      "id": 132,
      "seek": 66576,
      "start": 685.92,
      "end": 689.76,
      "text": " probably a week or maybe two weeks. And I would love for you to let me know below what you think",
      "tokens": [
        51372,
        1391,
        257,
        1243,
        420,
        1310,
        732,
        3259,
        13,
        400,
        286,
        576,
        959,
        337,
        291,
        281,
        718,
        385,
        458,
        2507,
        437,
        291,
        519,
        51564
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06581292925654231,
      "compression_ratio": 1.7893081761006289,
      "no_speech_prob": 0.010721534490585327
    },
    {
      "id": 133,
      "seek": 66576,
      "start": 689.76,
      "end": 692.64,
      "text": " about it. And again, it's using the skills we just talked about here in this video. I'm going to",
      "tokens": [
        51564,
        466,
        309,
        13,
        400,
        797,
        11,
        309,
        311,
        1228,
        264,
        3942,
        321,
        445,
        2825,
        466,
        510,
        294,
        341,
        960,
        13,
        286,
        478,
        516,
        281,
        51708
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06581292925654231,
      "compression_ratio": 1.7893081761006289,
      "no_speech_prob": 0.010721534490585327
    },
    {
      "id": 134,
      "seek": 69264,
      "start": 692.64,
      "end": 697.68,
      "text": " have you crack a password via the online method using a word list using Hydra, bam, bam, bam",
      "tokens": [
        50364,
        362,
        291,
        6226,
        257,
        11524,
        5766,
        264,
        2950,
        3170,
        1228,
        257,
        1349,
        1329,
        1228,
        24231,
        424,
        11,
        18132,
        11,
        18132,
        11,
        18132,
        50616
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1358913453687139,
      "compression_ratio": 1.8045977011494252,
      "no_speech_prob": 0.17307856678962708
    },
    {
      "id": 135,
      "seek": 69264,
      "start": 697.68,
      "end": 702.64,
      "text": " automation. And then I'm going to have you crack an offline password using a word list, a hash,",
      "tokens": [
        50616,
        17769,
        13,
        400,
        550,
        286,
        478,
        516,
        281,
        362,
        291,
        6226,
        364,
        21857,
        11524,
        1228,
        257,
        1349,
        1329,
        11,
        257,
        22019,
        11,
        50864
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1358913453687139,
      "compression_ratio": 1.8045977011494252,
      "no_speech_prob": 0.17307856678962708
    },
    {
      "id": 136,
      "seek": 69264,
      "start": 702.64,
      "end": 707.36,
      "text": " a password hash, using hash cat. Now there's a lot more to password hacking or cracking.",
      "tokens": [
        50864,
        257,
        11524,
        22019,
        11,
        1228,
        22019,
        3857,
        13,
        823,
        456,
        311,
        257,
        688,
        544,
        281,
        11524,
        31422,
        420,
        25229,
        13,
        51100
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1358913453687139,
      "compression_ratio": 1.8045977011494252,
      "no_speech_prob": 0.17307856678962708
    },
    {
      "id": 137,
      "seek": 69264,
      "start": 707.36,
      "end": 712.16,
      "text": " I just scratched the surface here, but I wanted to get you started. Hash cat is a crazy program",
      "tokens": [
        51100,
        286,
        445,
        40513,
        264,
        3753,
        510,
        11,
        457,
        286,
        1415,
        281,
        483,
        291,
        1409,
        13,
        30775,
        3857,
        307,
        257,
        3219,
        1461,
        51340
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1358913453687139,
      "compression_ratio": 1.8045977011494252,
      "no_speech_prob": 0.17307856678962708
    },
    {
      "id": 138,
      "seek": 69264,
      "start": 712.16,
      "end": 717.36,
      "text": " that you can use to do some crazy stuff. If you have something like a beastly gaming PC like this",
      "tokens": [
        51340,
        300,
        291,
        393,
        764,
        281,
        360,
        512,
        3219,
        1507,
        13,
        759,
        291,
        362,
        746,
        411,
        257,
        13464,
        356,
        9703,
        6465,
        411,
        341,
        51600
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1358913453687139,
      "compression_ratio": 1.8045977011494252,
      "no_speech_prob": 0.17307856678962708
    },
    {
      "id": 139,
      "seek": 71736,
      "start": 717.52,
      "end": 722.5600000000001,
      "text": " boy behind me with the crazy CPU and a crazy GPU, you can do some serious password cracking,",
      "tokens": [
        50372,
        3237,
        2261,
        385,
        365,
        264,
        3219,
        13199,
        293,
        257,
        3219,
        18407,
        11,
        291,
        393,
        360,
        512,
        3156,
        11524,
        25229,
        11,
        50624
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10975990776254349,
      "compression_ratio": 1.6993006993006994,
      "no_speech_prob": 0.021625587716698647
    },
    {
      "id": 140,
      "seek": 71736,
      "start": 722.5600000000001,
      "end": 726.96,
      "text": " going through massive word lists. I'm talking millions and millions of passwords in these lists.",
      "tokens": [
        50624,
        516,
        807,
        5994,
        1349,
        14511,
        13,
        286,
        478,
        1417,
        6803,
        293,
        6803,
        295,
        33149,
        294,
        613,
        14511,
        13,
        50844
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10975990776254349,
      "compression_ratio": 1.6993006993006994,
      "no_speech_prob": 0.021625587716698647
    },
    {
      "id": 141,
      "seek": 71736,
      "start": 726.96,
      "end": 731.04,
      "text": " Anyways, guys, that's about it. Password hacking, password cracking, whatever you want to call it.",
      "tokens": [
        50844,
        15585,
        11,
        1074,
        11,
        300,
        311,
        466,
        309,
        13,
        10319,
        7462,
        31422,
        11,
        11524,
        25229,
        11,
        2035,
        291,
        528,
        281,
        818,
        309,
        13,
        51048
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10975990776254349,
      "compression_ratio": 1.6993006993006994,
      "no_speech_prob": 0.021625587716698647
    },
    {
      "id": 142,
      "seek": 71736,
      "start": 731.04,
      "end": 737.44,
      "text": " It's a powerful tool. And again, please do not use this in any way that's illegal, which let me be",
      "tokens": [
        51048,
        467,
        311,
        257,
        4005,
        2290,
        13,
        400,
        797,
        11,
        1767,
        360,
        406,
        764,
        341,
        294,
        604,
        636,
        300,
        311,
        11905,
        11,
        597,
        718,
        385,
        312,
        51368
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10975990776254349,
      "compression_ratio": 1.6993006993006994,
      "no_speech_prob": 0.021625587716698647
    },
    {
      "id": 143,
      "seek": 71736,
      "start": 737.44,
      "end": 744.4,
      "text": " very clear. Unless you have someone's explicit permission to do this, it's illegal. Hack yourself,",
      "tokens": [
        51368,
        588,
        1850,
        13,
        16581,
        291,
        362,
        1580,
        311,
        13691,
        11226,
        281,
        360,
        341,
        11,
        309,
        311,
        11905,
        13,
        35170,
        1803,
        11,
        51716
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10975990776254349,
      "compression_ratio": 1.6993006993006994,
      "no_speech_prob": 0.021625587716698647
    },
    {
      "id": 144,
      "seek": 74440,
      "start": 744.4,
      "end": 749.4399999999999,
      "text": " hack your own passwords, hack me. I'm giving you permission to hack my, just the one server,",
      "tokens": [
        50364,
        10339,
        428,
        1065,
        33149,
        11,
        10339,
        385,
        13,
        286,
        478,
        2902,
        291,
        11226,
        281,
        10339,
        452,
        11,
        445,
        264,
        472,
        7154,
        11,
        50616
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12552860094153362,
      "compression_ratio": 1.6332046332046333,
      "no_speech_prob": 0.07473798096179962
    },
    {
      "id": 145,
      "seek": 74440,
      "start": 749.4399999999999,
      "end": 754.72,
      "text": " nothing else in my challenge. Otherwise, set up your own lab and do it in there. Do not use this",
      "tokens": [
        50616,
        1825,
        1646,
        294,
        452,
        3430,
        13,
        10328,
        11,
        992,
        493,
        428,
        1065,
        2715,
        293,
        360,
        309,
        294,
        456,
        13,
        1144,
        406,
        764,
        341,
        50880
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12552860094153362,
      "compression_ratio": 1.6332046332046333,
      "no_speech_prob": 0.07473798096179962
    },
    {
      "id": 146,
      "seek": 74440,
      "start": 754.72,
      "end": 759.52,
      "text": " for any illegal methods. But beyond that, I hope you like this video. If you do like it, like it.",
      "tokens": [
        50880,
        337,
        604,
        11905,
        7150,
        13,
        583,
        4399,
        300,
        11,
        286,
        1454,
        291,
        411,
        341,
        960,
        13,
        759,
        291,
        360,
        411,
        309,
        11,
        411,
        309,
        13,
        51120
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12552860094153362,
      "compression_ratio": 1.6332046332046333,
      "no_speech_prob": 0.07473798096179962
    },
    {
      "id": 147,
      "seek": 74440,
      "start": 759.52,
      "end": 762.8,
      "text": " And if you haven't already hit that subscribe button. If you like what I'm doing here, yep,",
      "tokens": [
        51120,
        400,
        498,
        291,
        2378,
        380,
        1217,
        2045,
        300,
        3022,
        2960,
        13,
        759,
        291,
        411,
        437,
        286,
        478,
        884,
        510,
        11,
        18633,
        11,
        51284
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12552860094153362,
      "compression_ratio": 1.6332046332046333,
      "no_speech_prob": 0.07473798096179962
    },
    {
      "id": 148,
      "seek": 74440,
      "start": 762.8,
      "end": 774.24,
      "text": " that's about it. I'll catch you guys later.",
      "tokens": [
        51284,
        300,
        311,
        466,
        309,
        13,
        286,
        603,
        3745,
        291,
        1074,
        1780,
        13,
        51856
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12552860094153362,
      "compression_ratio": 1.6332046332046333,
      "no_speech_prob": 0.07473798096179962
    }
  ],
  "processing_metadata": {
    "processed_at": "2025-06-26T09:58:14.715203",
    "whisper_model": "small",
    "personality_detected": "networkchuck",
    "domain_focus": "technology_networking"
  },
  "source_metadata": {
    "url": "https://www.youtube.com/watch?v=z4_oqTZJqCo",
    "title": "how to HACK a password // password cracking with Kali Linux and HashCat",
    "category": "Cybersecurity & Hacking",
    "difficulty": "intermediate",
    "key_topics": [
      "password cracking",
      "Kali Linux",
      "HashCat",
      "cybersecurity"
    ],
    "priority": "medium"
  }
}